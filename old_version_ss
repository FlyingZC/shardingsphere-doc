commit 64d0078ecbae587fd0c9fce0e8b524bc0a1f4784
Author: Zichao <57847965+Qianyi951015@users.noreply.github.com>
Date:   Fri Oct 28 00:09:58 2022 +1300

    Update documents (#21800)
    
    * Update DistSQL documents
    
    * Update DistSQL documents
    
    * Update DistSQL documents

diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-heartbeat.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-heartbeat.cn.md
deleted file mode 100644
index 4a3fa6a5f34..00000000000
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-heartbeat.cn.md
+++ /dev/null
@@ -1,43 +0,0 @@
-+++
-title = "CREATE DB_DISCOVERY HEARTBEAT"
-weight = 4
-+++
-
-## 描述
-
-`CREATE DB_DISCOVERY HEARTBEAT` 语法用于创建数据库发现心跳包规则
-
-### 语法定义
-
-```sql
-CreateDatabaseDiscoveryHeartbeat ::=
-  'CREATE' 'DB_DISCOVERY' 'HEARTBEAT' databaseDiscoveryHeartbaetDefinition ( ',' databaseDiscoveryHeartbaetDefinition )*
-
-databaseDiscoveryHeartbaetDefinition ::=
-    discoveryHeartbeatName '(' 'PROPERTIES' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' ')'
-    
-discoveryHeartbeatName ::=
-  identifier
-```
-
-### 补充说明
-
-- 带有 `-` 的命名在改动时需要使用 `" "`。
-
-### 示例
-
-#### 创建 `HEARTBEAT`
-
-```sql
-CREATE DB_DISCOVERY HEARTBEAT db_discovery_group_1_heartbeat(
-  PROPERTIES('keep-alive-cron'='0/5 * * * * ?')
-);
-```
-
-### 保留字
-
-`CREATE`、`DB_DISCOVERY`、`HEARTBEAT`
-
-### 相关链接
-
-- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-heartbeat.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-heartbeat.en.md
deleted file mode 100644
index e0008af80e7..00000000000
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-heartbeat.en.md
+++ /dev/null
@@ -1,43 +0,0 @@
-+++
-title = "CREATE DB_DISCOVERY HEARTBEAT"
-weight = 4
-+++
-
-## Description
-
-The `CREATE DB_DISCOVERY HEARTBEAT` syntax is used to create a database discovery heartbeat rule.
-
-### Syntax
-
-```sql
-CreateDatabaseDiscoveryHeartbeat ::=
-  'CREATE' 'DB_DISCOVERY' 'HEARTBEAT' databaseDiscoveryHeartbaetDefinition ( ',' databaseDiscoveryHeartbaetDefinition )*
-
-databaseDiscoveryHeartbaetDefinition ::=
-    discoveryHeartbeatName '(' 'PROPERTIES' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' ')'
-    
-discoveryHeartbeatName ::=
-  identifier
-```
-
-### Supplement
-
-- Names with `-` need to use `" "` when changing.
-
-### Example
-
-#### Create `HEARTBEAT`
-
-```sql
-CREATE DB_DISCOVERY HEARTBEAT db_discovery_group_1_heartbeat(
-  PROPERTIES('keep-alive-cron'='0/5 * * * * ?')
-);
-```
-
-### Reserved word
-
-`CREATE`, `DB_DISCOVERY`, `HEARTBEAT`
-
-### Related links
-
-- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-rule.cn.md
index 19c0130c454..4dc9c810873 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-rule.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-rule.cn.md
@@ -11,18 +11,15 @@ weight = 2
 
 ```sql
 CreateDatabaseDiscoveryRule ::=
-  'CREATE' 'DB_DISCOVERY' 'RULE' ( databaseDiscoveryDefinition | databaseDiscoveryConstruction ) ( ',' ( databaseDiscoveryDefinition | databaseDiscoveryConstruction ) )*
+  'CREATE' 'DB_DISCOVERY' 'RULE' databaseDiscoveryDefinition ( ',' databaseDiscoveryDefinition)*
 
 databaseDiscoveryDefinition ::=
-    ruleName '(' 'STORAGE_UNITS' '(' storageUnitName ( ',' storageUnitName )* ')' ',' 'TYPE' '(' 'NAME' '=' typeName ( ',' 'PROPERTIES' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* )? ',' 'HEARTBEAT' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' ')' 
-    
-databaseDiscoveryConstruction ::=
-    ruleName '(' 'STORAGE_UNITS' '(' storageUnitName ( ',' storageUnitName )* ')' ',' 'TYPE' '=' discoveryTypeName ',' 'HEARTBEAT' '=' discoveryHeartbeatName ')'
-    
+    ruleName '(' 'RESOURCES' '(' resourceName ( ',' resourceName )* ')' ',' 'TYPE' '(' 'NAME' '=' typeName ( ',' 'PROPERTIES' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* )? ',' 'HEARTBEAT' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' ')' 
+        
 ruleName ::=
   identifier
 
-storageUnitName ::=
+resourceName ::=
   identifier
 
 typeName ::=
@@ -39,7 +36,7 @@ discoveryHeartbeatName ::=
 
 ### 示例
 
-#### 创建 `discoveryRule` 时同时创建 `discoveryType` 和 `discoveryHeartbeat`
+- 创建数据库发现规则
 
 ```sql
 CREATE DB_DISCOVERY RULE db_discovery_group_0 (
@@ -49,16 +46,6 @@ CREATE DB_DISCOVERY RULE db_discovery_group_0 (
 );
 ```
 
-#### 使用已有的 `discoveryType` 和 `discoveryHeartbeat` 创建 `discoveryRule`
-
-```sql
-CREATE DB_DISCOVERY RULE db_discovery_group_1 (
-    STORAGE_UNITS(ds_0, ds_1, ds_2),
-    TYPE=db_discovery_group_1_mgr,
-    HEARTBEAT=db_discovery_group_1_heartbeat
-);
-```
-
 ### 保留字
 
 `CREATE`、`DB_DISCOVERY`、`RULE`、`STORAGE_UNITS`、`TYPE`、`NAME`、`PROPERTIES`、`HEARTBEAT`
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-rule.en.md
index f0529a237eb..e0fad76b62a 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-rule.en.md
@@ -11,18 +11,15 @@ The `CREATE DB_DISCOVERY RULE` syntax is used to create a database discovery rul
 
 ```sql
 CreateDatabaseDiscoveryRule ::=
-  'CREATE' 'DB_DISCOVERY' 'RULE' ( databaseDiscoveryDefinition | databaseDiscoveryConstruction ) ( ',' ( databaseDiscoveryDefinition | databaseDiscoveryConstruction ) )*
+  'CREATE' 'DB_DISCOVERY' 'RULE' databaseDiscoveryDefinition ( ',' databaseDiscoveryDefinition)*
 
 databaseDiscoveryDefinition ::=
-    ruleName '(' 'STORAGE_UNITS' '(' storageUnitName ( ',' storageUnitName )* ')' ',' 'TYPE' '(' 'NAME' '=' typeName ( ',' 'PROPERTIES' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* )? ',' 'HEARTBEAT' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' ')' 
-    
-databaseDiscoveryConstruction ::=
-    ruleName '(' 'STORAGE_UNITS' '(' storageUnitName ( ',' storageUnitName )* ')' ',' 'TYPE' '=' discoveryTypeName ',' 'HEARTBEAT' '=' discoveryHeartbeatName ')'
-    
+    ruleName '(' 'RESOURCES' '(' resourceName ( ',' resourceName )* ')' ',' 'TYPE' '(' 'NAME' '=' typeName ( ',' 'PROPERTIES' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* )? ',' 'HEARTBEAT' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' ')' 
+        
 ruleName ::=
   identifier
 
-storageUnitName ::=
+resourceName ::=
   identifier
 
 typeName ::=
@@ -39,7 +36,7 @@ discoveryHeartbeatName ::=
 
 ### Example
 
-#### When creating a `discoveryRule`, create both `discoveryType` and `discoveryHeartbeat`
+- Create database discovery rule
 
 ```sql
 CREATE
@@ -50,18 +47,6 @@ DB_DISCOVERY RULE db_discovery_group_0 (
 );
 ```
 
-#### Use the existing `discoveryType` and `discoveryHeartbeat` to create a `discoveryRule`
-
-```sql
-CREATE
-DB_DISCOVERY RULE db_discovery_group_1 (
-    STORAGE_UNITS(ds_0, ds_1, ds_2),
-    TYPE=db_discovery_group_1_mgr,
-    HEARTBEAT=db_discovery_group_1_heartbeat
-);
-
-```
-
 ### Reserved word
 
 `CREATE`, `DB_DISCOVERY`, `RULE`, `STORAGE_UNITS`, `TYPE`, `NAME`, `PROPERTIES`, `HEARTBEAT`
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-type.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-type.cn.md
deleted file mode 100644
index 64b1b1ff015..00000000000
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-type.cn.md
+++ /dev/null
@@ -1,46 +0,0 @@
-+++
-title = "CREATE DB_DISCOVERY TYPE"
-weight = 3
-+++
-
-## 描述
-
-`CREATE DB_DISCOVERY TYPE` 语法用于创建数据库发现类型规则
-
-### 语法定义
-
-```sql
-CreateDatabaseDiscoveryType ::=
-  'CREATE' 'DB_DISCOVERY' 'TYPE' databaseDiscoveryTypeDefinition ( ',' databaseDiscoveryTypeDefinition )*
-
-databaseDiscoveryTypeDefinition ::=
-    discoveryTypeName '(' 'TYPE' '(' 'NAME' '=' typeName ( ',' 'PROPERTIES' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' )? ')' ')'
-    
-discoveryTypeName ::=
-  identifier
-
-typeName ::=
-  string
-```
-
-### 补充说明
-
-- `discoveryType` 指定数据库发现服务类型，`ShardingSphere` 内置支持 `MySQL.MGR`。
-
-### 示例
-
-#### 创建 `discoveryType`
-
-```sql
-CREATE DB_DISCOVERY TYPE db_discovery_group_1_mgr(
-  TYPE(NAME='MySQL.MGR',PROPERTIES('group-name'='92504d5b-6dec'))
-);
-```
-
-### 保留字
-
-`CREATE`、`DB_DISCOVERY`、`TYPE`、`NAME`、`PROPERTIES`
-
-### 相关链接
-
-- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-type.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-type.en.md
deleted file mode 100644
index 83e44c3d24e..00000000000
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/db-discovery/create-db-discovery-type.en.md
+++ /dev/null
@@ -1,46 +0,0 @@
-+++
-title = "CREATE DB_DISCOVERY TYPE"
-weight = 3
-+++
-
-## Description
-
-The `CREATE DB_DISCOVERY TYPE` syntax is used to create a database discovery type rule.
-
-### Syntax
-
-```sql
-CreateDatabaseDiscoveryType ::=
-  'CREATE' 'DB_DISCOVERY' 'TYPE' databaseDiscoveryTypeDefinition ( ',' databaseDiscoveryTypeDefinition )*
-
-databaseDiscoveryTypeDefinition ::=
-    discoveryTypeName '(' 'TYPE' '(' 'NAME' '=' typeName ( ',' 'PROPERTIES' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' )? ')' ')'
-    
-discoveryTypeName ::=
-  identifier
-
-typeName ::=
-  string
-```
-
-### Supplement
-
-- `discoveryType` specifies the database discovery service type, `ShardingSphere` has built-in support for `MySQL.MGR`.
-
-### Example
-
-#### Create `discoveryType`
-
-```sql
-CREATE DB_DISCOVERY TYPE db_discovery_group_1_mgr(
-  TYPE(NAME='MySQL.MGR',PROPERTIES('group-name'='92504d5b-6dec'))
-);
-```
-
-### Reserved word
-
-`CREATE`, `DB_DISCOVERY`, `TYPE`, `NAME`, `PROPERTIES`
-
-### Related links
-
-- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/alter-encrypt-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/alter-encrypt-rule.cn.md
new file mode 100644
index 00000000000..109e87220ea
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/alter-encrypt-rule.cn.md
@@ -0,0 +1,63 @@
++++
+title = "ALTER ENCRYPT RULE"
+weight = 3
++++
+
+## 说明
+
+ `ALTER ENCRYPT RULE` 语法用于修改加密规则
+
+### 语法
+
+```sql
+AlterEncryptRule ::=
+  'ALTER' 'ENCRYPT' 'RULE' encryptDefinition ( ',' encryptDefinition )*
+
+encryptDefinition ::=
+  tableName '(' 'COLUMNS' '(' columnDefinition ( ',' columnDefinition )*  ')' ',' 'QUERY_WITH_CIPHER_COLUMN' '=' ( 'TRUE' | 'FALSE' ) ')'
+
+columnDefinition ::=
+    'NAME' '=' columnName ',' ( 'PLAIN' '=' plainColumnName )? 'CIPHER' '=' cipherColumnName ','  'TYPE' '(' 'NAME' '=' encryptAlgorithmType ( ',' 'PROPERTIES' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' )? ')'
+    
+tableName ::=
+  identifier
+
+columnName ::=
+  identifier
+
+plainColumnName ::=
+  identifier
+
+cipherColumnName ::=
+  identifier
+
+encryptAlgorithmType ::=
+  string
+```
+
+### Supplement
+
+- `PLAIN` 指定明文数据列，`CIPHER` 指定密文数据列；
+- `encryptAlgorithmType` 指定加密算法类型，请参考 [加密算法](/cn/user-manual/common-config/builtin-algorithm/encrypt/)；
+- 重复的 `tableName` 将无法被创建；
+- `queryWithCipherColumn` 支持大写或小写的 true 或 false。
+
+### 示例
+
+- 修改加密规则
+
+```sql
+ALTER ENCRYPT RULE t_encrypt (
+COLUMNS(
+(NAME=user_id,PLAIN=user_plain,CIPHER=user_cipher,TYPE(NAME='AES',PROPERTIES('aes-key-value'='123456abc'))),
+(NAME=order_id,CIPHER=order_cipher,TYPE(NAME='MD5'))
+), QUERY_WITH_CIPHER_COLUMN=TRUE);
+```
+
+### 保留字
+
+`ALTER`、`ENCRYPT`、`RULE`、`COLUMNS`、`NAME`、`CIPHER`、`PLAIN`、`QUERY_WITH_CIPHER_COLUMN`、`TYPE`、`TRUE`、`FALSE`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/alter-encrypt-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/alter-encrypt-rule.en.md
index 08615cfddef..9c23eaaa0f8 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/alter-encrypt-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/alter-encrypt-rule.en.md
@@ -1,6 +1,6 @@
 +++
 title = "ALTER ENCRYPT RULE"
-weight = 2
+weight = 3
 +++
 
 ## Description
@@ -43,7 +43,7 @@ encryptAlgorithmType ::=
 
 ### Example
 
-#### Alter an encrypt rule
+- Alter an encrypt rule
 
 ```sql
 ALTER ENCRYPT RULE t_encrypt (
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/drop-encrypt-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/drop-encrypt-rule.cn.md
new file mode 100644
index 00000000000..50e75d4025c
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/drop-encrypt-rule.cn.md
@@ -0,0 +1,34 @@
++++
+title = "DROP ENCRYPT RULE"
+weight = 4
++++
+
+## 说明
+
+`DROP ENCRYPT RULE` 语法用于删除加密规则
+
+### 语法
+
+```sql
+DropEncryptRule ::=
+  'DROP' 'ENCRYPT' 'RULE' tableName ( ',' tableName )*
+    
+tableName ::=
+  identifier
+```
+
+### 示例
+
+- 删除加密规则
+
+```sql
+DROP ENCRYPT RULE t_encrypt, t_encrypt_2;
+```
+
+### 保留字
+
+`DROP`, `ENCRYPT`, `RULE`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/drop-encrypt-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/drop-encrypt-rule.en.md
index a66f1c3f6ca..34f788f2ad8 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/drop-encrypt-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/encrypt/drop-encrypt-rule.en.md
@@ -1,6 +1,6 @@
 +++
 title = "DROP ENCRYPT RULE"
-weight = 2
+weight = 4
 +++
 
 ## Description
@@ -19,7 +19,7 @@ tableName ::=
 
 ### Example
 
-#### Drop an encrypt rule
+- Drop an encrypt rule
 
 ```sql
 DROP ENCRYPT RULE t_encrypt, t_encrypt_2;
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/alter-readwrite-splitting-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/alter-readwrite-splitting-rule.cn.md
new file mode 100644
index 00000000000..0eb8f664ba8
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/alter-readwrite-splitting-rule.cn.md
@@ -0,0 +1,75 @@
++++
+title = "ALTER READWRITE_SPLITTING RULE"
+weight = 3
++++
+
+## 描述
+
+`ALTER READWRITE_SPLITTING RULE` 语法用于修改读写分离规则
+
+### 语法定义
+
+```sql
+AlterReadwriteSplittingRule ::=
+  'ALTER' 'READWRITE_SPLITTING' 'RULE' readwriteSplittingDefinition ( ',' readwriteSplittingDefinition )*
+
+readwriteSplittingDefinition ::=
+  ruleName '(' ( staticReadwriteSplittingDefinition | dynamicReadwriteSplittingDefinition ) ( ',' loadBalancerDefinition )? ')'
+
+staticReadwriteSplittingDefinition ::=
+    'WRITE_RESOURCE' '=' writeResourceName ',' 'READ_RESOURCES' '(' ruleName (',' ruleName)* ')'
+
+dynamicReadwriteSplittingDefinition ::=
+    'AUTO_AWARE_RESOURCE' '=' resourceName ( ',' 'WRITE_DATA_SOURCE_QUERY_ENABLED' '=' ('TRUE' | 'FALSE') )?
+
+loadBalancerDefinition ::=
+    'TYPE' '(' 'NAME' '=' loadBalancerType ( ',' 'PROPERTIES' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' )? ')'
+
+ruleName ::=
+  identifier
+
+writeResourceName ::=
+  identifier
+
+resourceName ::=
+  identifier
+    
+loadBalancerType ::=
+  string
+```
+
+### 补充说明
+
+- 动态读写分离规则依赖于数据库发现规则；
+- `loadBalancerType` 指定负载均衡算法类型，请参考负载均衡算法；
+
+### 示例
+
+#### 修改静态读写分离规则
+
+```sql
+ALTER READWRITE_SPLITTING RULE ms_group_0 (
+    WRITE_RESOURCE=write_ds,
+    READ_RESOURCES(read_ds_0,read_ds_1),
+    TYPE(NAME="random")
+);
+```
+
+#### 修改动态读写分离规则
+
+```sql
+ALTER READWRITE_SPLITTING RULE ms_group_1 (
+    AUTO_AWARE_RESOURCE=group_0,
+    WRITE_DATA_SOURCE_QUERY_ENABLED=false,
+    TYPE(NAME="random",PROPERTIES("read_weight"="2:1"))
+);
+```
+
+### 保留字
+
+`ALTER`、`READWRITE_SPLITTING`、`RULE`、`WRITE_RESOURCE`、`READ_RESOURCES`、`AUTO_AWARE_RESOURCE`、`WRITE_DATA_SOURCE_QUERY_ENABLED`
+、`TYPE`、`NAME`、`PROPERTIES`、`TRUE`、`FALSE`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/alter-readwrite-splitting-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/alter-readwrite-splitting-rule.en.md
new file mode 100644
index 00000000000..db379b9bfd9
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/alter-readwrite-splitting-rule.en.md
@@ -0,0 +1,75 @@
++++
+title = "ALTER READWRITE_SPLITTING RULE"
+weight = 3
++++
+
+## Description
+
+The `ALTER READWRITE_SPLITTING RULE` syntax is used to alter a readwrite splitting rule.
+
+### Syntax
+
+```sql
+AlterReadwriteSplittingRule ::=
+  'ALTER' 'READWRITE_SPLITTING' 'RULE' readwriteSplittingDefinition ( ',' readwriteSplittingDefinition )*
+
+readwriteSplittingDefinition ::=
+  ruleName '(' ( staticReadwriteSplittingDefinition | dynamicReadwriteSplittingDefinition ) ( ',' loadBalancerDefinition )? ')'
+
+staticReadwriteSplittingDefinition ::=
+    'WRITE_RESOURCE' '=' writeResourceName ',' 'READ_RESOURCES' '(' ruleName (',' ruleName)* ')'
+
+dynamicReadwriteSplittingDefinition ::=
+    'AUTO_AWARE_RESOURCE' '=' resourceName ( ',' 'WRITE_DATA_SOURCE_QUERY_ENABLED' '=' ('TRUE' | 'FALSE') )?
+
+loadBalancerDefinition ::=
+    'TYPE' '(' 'NAME' '=' loadBalancerType ( ',' 'PROPERTIES' '(' 'key' '=' 'value' ( ',' 'key' '=' 'value' )* ')' )? ')'
+
+ruleName ::=
+  identifier
+
+writeResourceName ::=
+  identifier
+
+resourceName ::=
+  identifier
+    
+loadBalancerType ::=
+  string
+```
+
+### Supplement
+
+- Dynamic readwrite-splitting rules rely on database discovery rules;
+- `loadBalancerType` specifies the load balancing algorithm type, please refer to Load Balance Algorithm;
+
+### Example
+
+#### Alter a statics readwrite splitting rule
+
+```sql
+ALTER READWRITE_SPLITTING RULE ms_group_0 (
+    WRITE_RESOURCE=write_ds,
+    READ_RESOURCES(read_ds_0,read_ds_1),
+    TYPE(NAME="random")
+);
+```
+
+#### Alter a dynamic readwrite splitting rule
+
+```sql
+ALTER READWRITE_SPLITTING RULE ms_group_1 (
+    AUTO_AWARE_RESOURCE=group_0,
+    WRITE_DATA_SOURCE_QUERY_ENABLED=false,
+    TYPE(NAME="random",PROPERTIES("read_weight"="2:1"))
+);
+```
+
+### Reserved word
+
+`ALTER`, `READWRITE_SPLITTING`, `RULE`, `WRITE_RESOURCE`, `READ_RESOURCES`, `AUTO_AWARE_RESOURCE`
+, `WRITE_DATA_SOURCE_QUERY_ENABLED`, `TYPE`, `NAME`, `PROPERTIES`, `TRUE`, `FALSE`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/drop-readwrite-splitting-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/drop-readwrite-splitting-rule.cn.md
new file mode 100644
index 00000000000..c9adf0373ec
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/drop-readwrite-splitting-rule.cn.md
@@ -0,0 +1,44 @@
++++
+title = "DROP READWRITE_SPLITTING RULE"
+weight = 4
++++
+
+## 描述
+
+`DROP READWRITE_SPLITTING RULE` 语法用于为指定逻辑库删除读写分离
+
+### 语法定义
+
+```sql
+DropReadwriteSplittingRule ::=
+  'DROP' 'READWRITE_SPLITTING' 'RULE' ('FROM' databaseName)
+
+databaseName ::=
+  identifier
+```
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE`。 如果也未使用 `DATABASE` 则会提示 `No database selected`。
+
+### 示例
+
+- 为指定逻辑库删除读写分离规则
+ 
+```sql
+DROP READWRITE_SPLITTING RULE ms_group_1 FROM test1;
+```
+
+- 为当前逻辑库删除读写分离规则
+
+```sql
+DROP READWRITE_SPLITTING RULE ms_group_1;
+```
+
+### 保留字
+
+`DROP`、`READWRITE_SPLITTING`、`RULE`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/drop-readwrite-splitting-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/drop-readwrite-splitting-rule.en.md
new file mode 100644
index 00000000000..a698140671e
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/readwrite-splitting/drop-readwrite-splitting-rule.en.md
@@ -0,0 +1,44 @@
++++
+title = "DROP READWRITE_SPLITTING RULE"
+weight = 4
++++
+
+## Description
+
+The `DROP READWRITE_SPLITTING RULE` syntax is used to drop readwrite splitting rule for specified database
+
+### Syntax
+
+```sql
+DropReadwriteSplittingRule ::=
+  'DROP' 'READWRITE_SPLITTING' 'RULE' ('FROM' databaseName)
+
+databaseName ::=
+  identifier
+```
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+### Example
+
+- Drop readwrite splitting rule for specified database
+
+```sql
+DROP READWRITE_SPLITTING RULE ms_group_1 FROM test1;
+```
+
+- Drop readwrite splitting rule for current database
+
+```sql
+DROP READWRITE_SPLITTING RULE ms_group_1;
+```
+
+### Reserved word
+
+`DROP`, `READWRITE_SPLITTING`, `RULE`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-default-sharding-strategy.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-default-sharding-strategy.cn.md
new file mode 100644
index 00000000000..2c56db3eb4f
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-default-sharding-strategy.cn.md
@@ -0,0 +1,56 @@
++++
+title = "ALTER DEFAULT SHARDING STRATEGY"
+weight = 6
++++
+
+## 描述
+
+`ALTER DEFAULT SHARDING STRATEGY` 语法用于修改默认的分片策略
+
+### 语法定义
+
+```sql
+AlterDefaultShardingStrategy ::=
+  'ALTER' 'DEFAULT' 'SHARDING' ('DATABASE' | 'TABLE') 'STRATEGY' '(' shardingStrategy ')'
+
+shardingStrategy ::=
+  'TYPE' '=' strategyType ',' ( 'SHARDING_COLUMN' '=' columnName  | 'SHARDING_COLUMNS' '=' columnNames ) ',' ( 'SHARDING_ALGORITHM' '=' algorithmName | algorithmDefinition )
+
+algorithmDefinition ::=
+  'TYPE' '(' 'NAME' '=' algorithmType ',' 'PROPERTIES'  '(' propertyDefinition ')' ')'  
+
+columnNames ::=
+  columnName (',' columnName)+
+
+columnName ::=
+  identifier
+
+algorithmName ::=
+  identifier
+  
+algorithmType ::=
+  string
+```
+
+### 补充说明
+
+- 当使用复合分片算法时，需要通过 `SHARDING_COLUMNS` 指定多个分片键；
+- `algorithmType` 为分片算法类型，详细的分片算法类型信息请参考[分片算法](/cn/user-manual/common-config/builtin-algorithm/sharding/)。
+
+### 示例
+
+- 修改默认分表策略
+
+```sql
+ALTER DEFAULT SHARDING TABLE STRATEGY (
+    TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}")))
+);
+```
+
+### 保留字
+
+`ALTER`、`DEFAULT`、`SHARDING`、`DATABASE`、`TABLE`、`STRATEGY`、`TYPE`、`SHARDING_COLUMN`、`SHARDING_COLUMNS`、`SHARDING_ALGORITHM`、`NAME`、`PROPERTIES`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-default-sharding-strategy.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-default-sharding-strategy.en.md
new file mode 100644
index 00000000000..a6c4ee98750
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-default-sharding-strategy.en.md
@@ -0,0 +1,57 @@
++++
+title = "ALTER DEFAULT SHARDING STRATEGY"
+weight = 6
++++
+
+## Description
+
+The `ALTER DEFAULT SHARDING STRATEGY` syntax is used to alter a default sharding strategy
+
+### Syntax
+
+```sql
+AlterDefaultShardingStrategy ::=
+  'ALTER' 'DEFAULT' 'SHARDING' ('DATABASE' | 'TABLE') 'STRATEGY' '(' shardingStrategy ')'
+
+shardingStrategy ::=
+  'TYPE' '=' strategyType ',' ( 'SHARDING_COLUMN' '=' columnName  | 'SHARDING_COLUMNS' '=' columnNames ) ',' ( 'SHARDING_ALGORITHM' '=' algorithmName | algorithmDefinition )
+
+algorithmDefinition ::=
+  'TYPE' '(' 'NAME' '=' algorithmType ',' 'PROPERTIES'  '(' propertyDefinition ')' ')'  
+
+columnNames ::=
+  columnName (',' columnName)+
+
+columnName ::=
+  identifier
+
+algorithmName ::=
+  identifier
+  
+algorithmType ::=
+  string
+```
+
+### Supplement
+
+- When using the complex sharding algorithm, multiple sharding columns need to be specified using `SHARDING_COLUMNS`;
+- `algorithmType` is the sharding algorithm type. For detailed sharding algorithm type information, please refer
+  to [Sharding Algorithm](/en/user-manual/common-config/builtin-algorithm/sharding/).
+
+### Example
+
+- Alter a default sharding table strategy
+
+```sql
+ALTER DEFAULT SHARDING TABLE STRATEGY (
+    TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}")))
+);
+```
+
+### Reserved word
+
+`ALTER`, `DEFAULT`, `SHARDING`, `DATABASE`, `TABLE`, `STRATEGY`, `TYPE`, `SHARDING_COLUMN`, `SHARDING_COLUMNS`, `SHARDING_ALGORITHM`, `NAME`, `PROPERTIES`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-broadcast-table-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-broadcast-table-rule.cn.md
new file mode 100644
index 00000000000..941880893c8
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-broadcast-table-rule.cn.md
@@ -0,0 +1,40 @@
++++
+title = "CREATE BROADCAST TABLE RULE"
+weight = 16
++++
+
+## 描述
+
+`CREATE BROADCAST TABLE RULE` 语法用于为需要广播的表（广播表）创建广播规则
+
+### 语法定义
+
+```sql
+CreateBroadcastTableRule ::=
+  'CREATE' 'BROADCAST' 'TABLE' 'RULE'  tableName (',' tableName)* 
+
+tableName ::=
+  identifier
+```
+
+### 补充说明
+
+- `tableName` 可使用已经存在的表或者将要创建的表；
+- 只能存在一个广播规则，但可包含多个广播表，因此无法重复执行 `CREATE BROADCAST TABLE RULE`。
+
+### 示例
+
+#### 创建广播规则
+
+```sql
+-- 将 t_province， t_city 添加到广播规则中 
+CREATE BROADCAST TABLE RULE t_province, t_city;
+```
+
+### 保留字
+
+`CREATE`、`BROADCAST`、`TABLE`、`RULE`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-broadcast-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-broadcast-table-rule.en.md
new file mode 100644
index 00000000000..c52a0f4e0f8
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-broadcast-table-rule.en.md
@@ -0,0 +1,42 @@
++++
+title = "CREATE BROADCAST TABLE RULE"
+weight = 16
++++
+
+## Description
+
+The `CREATE BROADCAST TABLE RULE` syntax is used to create broadcast table rules for tables that need to be
+broadcast (broadcast tables)
+
+### Syntax
+
+```sql
+CreateBroadcastTableRule ::=
+  'CREATE' 'BROADCAST' 'TABLE' 'RULE'  tableName (',' tableName)* 
+
+tableName ::=
+  identifier
+```
+
+### Supplement
+
+- `tableName` can use an existing table or a table that will be created;
+- Only one broadcast rule can exist, but can contain multiple broadcast tables, so can not
+  execute `CREATE BROADCAST TABLE RULE` more than one time. 
+
+### Example
+
+#### Create broadcast table rule
+
+```sql
+-- Add t_province, t_city to broadcast table rules
+CREATE BROADCAST TABLE RULE t_province, t_city;
+```
+
+### Reserved word
+
+`CREATE`, `BROADCAST`, `TABLE`, `RULE`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md
index 8f20916a156..2da6efb30aa 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md
@@ -17,7 +17,7 @@ shardingStrategy ::=
   'TYPE' '=' strategyType ',' ( 'SHARDING_COLUMN' '=' columnName  | 'SHARDING_COLUMNS' '=' columnNames ) ',' ( 'SHARDING_ALGORITHM' '=' algorithmName | algorithmDefinition )
 
 algorithmDefinition ::=
-  'TYPE' '(' 'NAME' '=' algorithmType ( ',' 'PROPERTIES'  '(' propertyDefinition  ')' )?')'  
+  'TYPE' '(' 'NAME' '=' algorithmType ',' 'PROPERTIES'  '(' propertyDefinition ')' ')'  
 
 columnNames ::=
   columnName (',' columnName)+
@@ -39,24 +39,9 @@ algorithmType ::=
 
 ### 示例
 
-#### 1.通过已有的分片算法创建默认分库策略
+- 创建默认分表策略
 
 ```sql
--- 创建分片算法
-CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
-);
-
--- 创建默认分库策略
-CREATE DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline
-);
-```
-
-#### 2.同时创建分片算法和默认分表策略
-
-```sql
--- 创建默认分表策略
 CREATE DEFAULT SHARDING TABLE STRATEGY (
     TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}")))
 );
@@ -69,4 +54,3 @@ CREATE DEFAULT SHARDING TABLE STRATEGY (
 ### 相关链接
 
 - [保留字](/cn/reference/distsql/syntax/reserved-word/)
-- [CREATE SHARDING ALGORITHM](/cn/reference/distsql/syntax/rdl/rule-definition/create-sharding-algorithm/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md
index 4ad02bea378..c551121c095 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md
@@ -17,7 +17,7 @@ shardingStrategy ::=
   'TYPE' '=' strategyType ',' ( 'SHARDING_COLUMN' '=' columnName  | 'SHARDING_COLUMNS' '=' columnNames ) ',' ( 'SHARDING_ALGORITHM' '=' algorithmName | algorithmDefinition )
 
 algorithmDefinition ::=
-  'TYPE' '(' 'NAME' '=' algorithmType ( ',' 'PROPERTIES'  '(' propertyDefinition  ')' )?')'  
+  'TYPE' '(' 'NAME' '=' algorithmType ',' 'PROPERTIES'  '(' propertyDefinition ')' ')'  
 
 columnNames ::=
   columnName (',' columnName)+
@@ -40,21 +40,7 @@ algorithmType ::=
 
 ### Example
 
-#### 1.Create a default sharding strategy by using an existing sharding algorithm
-
-```sql
--- create a sharding algorithm
-CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
-);
-
--- create a default sharding database strategy
-CREATE DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline
-);
-```
-
-#### 2.Create sharding algorithm and default sharding table strategy at the same time
+- create a default sharding table strategy
 
 ```sql
 -- create a default sharding table strategy
@@ -70,4 +56,3 @@ CREATE DEFAULT SHARDING TABLE STRATEGY (
 ### Related links
 
 - [Reserved word](/en/reference/distsql/syntax/reserved-word/)
-- [CREATE SHARDING ALGORITHM](/en/reference/distsql/syntax/rdl/rule-definition/create-sharding-algorithm/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-broadcast-table-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-broadcast-table-rule.cn.md
deleted file mode 100644
index 5e080748801..00000000000
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-broadcast-table-rule.cn.md
+++ /dev/null
@@ -1,41 +0,0 @@
-+++
-title = "CREATE SHARDING BROADCAST TABLE RULE"
-weight = 7
-+++
-
-## 描述
-
-`CREATE SHARDING BROADCAST TABLE RULE` 语法用于为需要广播的表（广播表）创建广播规则
-
-### 语法定义
-
-```sql
-CreateBroadcastTableRule ::=
-  'CREATE' 'SHARDING' 'BROADCAST' 'TABLE' 'RULES' '(' tableName (',' tableName)* ')'
-
-tableName ::=
-  identifier
-```
-
-### 补充说明
-
-- `tableName` 可使用已经存在的表或者将要创建的表；
-- 只能存在一个广播规则，但可包含多个广播表，因此无法重复执行 `CREATE SHARDING BROADCAST TABLE RULE`。
- 当广播规则已经存在但还需要添加广播表时，需要使用 `ALTER BROADCAST TABLE RULE` 来修改广播规则。
-
-### 示例
-
-#### 创建广播规则
-
-```sql
--- 将 t_province， t_city 添加到广播规则中 
-CREATE SHARDING BROADCAST TABLE RULES (t_province, t_city);
-```
-
-### 保留字
-
-`CREATE`、`SHARDING`、`BROADCAST`、`TABLE`、`RULES`
-
-### 相关链接
-
-- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-broadcast-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-broadcast-table-rule.en.md
deleted file mode 100644
index e2f51f37bc0..00000000000
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-broadcast-table-rule.en.md
+++ /dev/null
@@ -1,43 +0,0 @@
-+++
-title = "CREATE SHARDING BROADCAST TABLE RULE"
-weight = 7
-+++
-
-## Description
-
-The `CREATE SHARDING BROADCAST TABLE RULE` syntax is used to create broadcast table rules for tables that need to be
-broadcast (broadcast tables)
-
-### Syntax
-
-```sql
-CreateBroadcastTableRule ::=
-  'CREATE' 'SHARDING' 'BROADCAST' 'TABLE' 'RULES' '(' tableName (',' tableName)* ')'
-
-tableName ::=
-  identifier
-```
-
-### Supplement
-
-- `tableName` can use an existing table or a table that will be created;
-- Only one broadcast rule can exist, but can contain multiple broadcast tables, so can not
-  execute `CREATE SHARDING BROADCAST TABLE RULE` more than one time. When the broadcast table rule already exists but
-  the broadcast table needs to be added, you need to use `ALTER BROADCAST TABLE RULE` to modify the broadcast table rule.
-
-### Example
-
-#### Create sharding broadcast table rule
-
-```sql
--- Add t_province, t_city to broadcast table rules
-CREATE SHARDING BROADCAST TABLE RULES (t_province, t_city);
-```
-
-### Reserved word
-
-`CREATE`, `SHARDING`, `BROADCAST`, `TABLE`, `RULES`
-
-### Related links
-
-- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule.cn.md
index 6b8f82911fd..2121323cf31 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule.cn.md
@@ -1,6 +1,6 @@
 +++
 title = "CREATE SHARDING TABLE REFERENCE RULE"
-weight = 6
+weight = 13
 +++
 
 ## 描述
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule.en.md
index 1b650a90811..c31a5f9da99 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule.en.md
@@ -1,6 +1,6 @@
 +++
 title = "CREATE SHARDING TABLE REFERENCE RULE"
-weight = 6
+weight = 13
 +++
 
 ## Description
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-default-sharding-strategy.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-default-sharding-strategy.cn.md
new file mode 100644
index 00000000000..6e4cdb6b2f7
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-default-sharding-strategy.cn.md
@@ -0,0 +1,43 @@
++++
+title = "DROP DEFAULT SHARDING STRATEGY"
+weight = 7
++++
+
+## 描述
+
+`DROP DEFAULT SHARDING STRATEGY` 语法用于删除指定逻辑库的默认分片策略
+
+### 语法定义
+
+```sql
+DropDefaultShardingStrategy ::=
+  'DROP' 'DEFAULT' 'SHARDING' ('TABLE' | 'DATABASE') 'STRATEGY' ('FROM' databaseName)?
+
+databaseName ::=
+  identifier
+```
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE`。 如果也未使用 `DATABASE` 则会提示 `No database selected`。
+
+### 示例
+
+- 为指定逻辑库删除默认表分片策略
+ 
+```sql
+DROP DEFAULT SHARDING TABLE STRATEGY FROM test1;
+```
+
+- 为当前逻辑库删除默认库分片策略
+
+```sql
+DROP DEFAULT SHARDING DATABASE STRATEGY;
+```
+
+### 保留字
+
+`DROP`、`DEFAULT`、`SHARDING`、`TABLE`、`DATABASE`、`STRATEGY`、`FROM`
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-default-sharding-strategy.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-default-sharding-strategy.en.md
new file mode 100644
index 00000000000..b9fc2ef47cb
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-default-sharding-strategy.en.md
@@ -0,0 +1,44 @@
++++
+title = "DROP DEFAULT SHARDING STRATEGY"
+weight = 7
++++
+
+## Description
+
+The `DROP DEFAULT SHARDING STRATEGY` syntax is used to drop default sharding strategy for specified database.
+
+### Syntax
+
+```sql
+DropDefaultShardingStrategy ::=
+  'DROP' 'DEFAULT' 'SHARDING' ('TABLE' | 'DATABASE') 'STRATEGY' ('FROM' databaseName)?
+
+databaseName ::=
+  identifier
+```
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+### Example
+
+- Drop default sharding table strategy for specified database.
+
+```sql
+DROP DEFAULT SHARDING TABLE STRATEGY FROM test1;
+```
+
+- Drop default sharding database strategy for current database.
+
+```sql
+DROP DEFAULT SHARDING DATABASE STRATEGY;
+```
+
+### Reserved word
+
+`DROP`, `DEFAULT` , `SHARDING`, `TABLE`, `DATABASE` ,`STRATEGY`, `FROM`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-algorithm.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-algorithm.cn.md
new file mode 100644
index 00000000000..4b0a70e851b
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-algorithm.cn.md
@@ -0,0 +1,47 @@
++++
+title = "DROP SHARDING ALGORITHM"
+weight = 12
++++
+
+## 描述
+
+`DROP SHARDING ALGORITHM` 语法用于删除指定逻辑库的指定分片算法
+
+### 语法定义
+
+```sql
+DropShardingAlgorithm ::=
+  'DROP' 'SHARDING' 'ALGORITHM' shardingAlgorithmName ('FROM' databaseName)?
+
+shardingAlgorithmName ::=
+  identifier
+
+databaseName ::=
+  identifier
+```
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE`。 如果也未使用 `DATABASE` 则会提示 `No database selected`。
+
+### 示例
+
+- 删除指定逻辑库的指定分片算法
+
+```sql
+DROP SHARDING ALGORITHM t_order_hash_mod FROM test1;
+```
+
+- 删除当前逻辑库的指定分片算法
+
+```sql
+DROP SHARDING ALGORITHM t_order_hash_mod;
+```
+
+### 保留字
+
+`DROP`、`SHARDING`、`ALGORITHM`、`FROM`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-algorithm.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-algorithm.en.md
new file mode 100644
index 00000000000..7cfc545f8a8
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-algorithm.en.md
@@ -0,0 +1,47 @@
++++
+title = "DROP SHARDING ALGORITHM"
+weight = 12
++++
+
+## Description
+
+The `DROP SHARDING ALGORITHM` syntax is used to drop sharding algorithm for specified database.
+
+### Syntax
+
+```sql
+DropShardingAlgorithm ::=
+  'DROP' 'SHARDING' 'ALGORITHM' shardingAlgorithmName ('FROM' databaseName)?
+
+shardingAlgorithmName ::=
+  identifier
+
+databaseName ::=
+  identifier
+```
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+### Example
+
+- Drop sharding algorithm for specified database.
+
+```sql
+DROP SHARDING ALGORITHM t_order_hash_mod FROM test1;
+```
+
+- Drop sharding algorithm for current database.
+
+```sql
+DROP SHARDING ALGORITHM t_order_hash_mod;
+```
+
+### Reserved word
+
+`DROP`, `SHARDING`, `ALGORITHM`, `FROM`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-key-generator.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-key-generator.cn.md
new file mode 100644
index 00000000000..cb334e755d6
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-key-generator.cn.md
@@ -0,0 +1,47 @@
++++
+title = "DROP SHARDING KEY GENERATOR"
+weight = 11
++++
+
+## 描述
+
+`DROP SHARDING KEY GENERATOR` 语法用于删除指定逻辑库的指定分片主键生成器
+
+### 语法定义
+
+```sql
+DropShardingKeyGenerator ::=
+  'DROP' 'SHARDING' 'KEY' 'GENERATOR' keyGeneratorName ('FROM' databaseName)?
+
+keyGeneratorName ::=
+  identifier
+
+databaseName ::=
+  identifier
+```
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE`。 如果也未使用 `DATABASE` 则会提示 `No database selected`。
+
+### 示例
+
+- 删除指定逻辑库的指定分片主键生成器
+
+```sql
+DROP SHARDING KEY GENERATOR t_order_snowflake FROM test1;
+```
+
+- 删除当前逻辑库的指定分片主键生成器
+
+```sql
+DROP SHARDING KEY GENERATOR t_order_snowflake;
+```
+
+### 保留字
+
+`DROP`、`SHARDING`、`KEY`、`GENERATOR`、`FROM`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-key-generator.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-key-generator.en.md
new file mode 100644
index 00000000000..d1533b382b9
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-key-generator.en.md
@@ -0,0 +1,47 @@
++++
+title = "DROP SHARDING KEY GENERATOR"
+weight = 11
++++
+
+## Description
+
+The `DROP SHARDING KEY GENERATOR` syntax is used to drop sharding key generator for specified database.
+
+### Syntax
+
+```sql
+DropShardingKeyGenerator ::=
+  'DROP' 'SHARDING' 'KEY' 'GENERATOR' keyGeneratorName ('FROM' databaseName)?
+
+keyGeneratorName ::=
+  identifier
+  
+databaseName ::=
+  identifier
+```
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+### Example
+
+- Drop sharding key generator for specified database.
+
+```sql
+DROP SHARDING KEY GENERATOR t_order_snowflake FROM test1;
+```
+
+- Drop sharding key generator for current database.
+
+```sql
+DROP SHARDING KEY GENERATOR t_order_snowflake;
+```
+
+### Reserved word
+
+`DROP`, `SHARDING`, `KEY`, `GENERATOR`, `FROM`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-rule.cn.md
new file mode 100644
index 00000000000..7262e3206ff
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-rule.cn.md
@@ -0,0 +1,47 @@
++++
+title = "DROP SHARDING TABLE RULE"
+weight = 4
++++
+
+## 描述
+
+`DROP SHARDING TABLE RULE` 语法用于删除指定逻辑库的指定分片规则
+
+### 语法定义
+
+```sql
+DropShardingTableRule ::=
+  'DROP' 'SHARDING' 'TABLE' 'RULE'  shardingRuleName (',' shardingRuleName)*  ('FROM' databaseName)?
+
+shardingRuleName ::=
+  identifier
+
+databaseName ::=
+  identifier
+```
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE`。 如果也未使用 `DATABASE` 则会提示 `No database selected`。
+
+### 示例
+
+- 为指定逻辑库删除多个指定分片规则
+ 
+```sql
+DROP SHARDING TABLE RULE t_order, t_order_item FROM test1;
+```
+
+- 为当前逻辑库删除单个指定分片规则
+
+```sql
+DROP SHARDING TABLE RULE t_order;
+```
+
+### 保留字
+
+`DROP`、`SHARDING`、`TABLE`、`RULE`、`FROM`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-rule.en.md
new file mode 100644
index 00000000000..0ed8516d5f8
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-rule.en.md
@@ -0,0 +1,47 @@
++++
+title = "DROP SHARDING TABLE RULE"
+weight = 4
++++
+
+## Description
+
+The `DROP SHARDING TABLE RULE` syntax is used to drop sharding table rule for specified database.
+
+### Syntax
+
+```sql
+DropShardingTableRule ::=
+  'DROP' 'SHARDING' 'TABLE' 'RULE'  shardingRuleName (',' shardingRuleName)*  ('FROM' databaseName)?
+
+shardingRuleName ::=
+  identifier
+
+databaseName ::=
+  identifier
+```
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+### Example
+
+- Drop mutiple sharding table rules for specified database.
+
+```sql
+DROP SHARDING TABLE RULE t_order, t_order_item FROM test1;
+```
+
+- Drop a sharding table rule for current database.
+
+```sql
+DROP SHARDING TABLE RULE t_order;
+```
+
+### Reserved word
+
+`DROP`, `SHARDING`, `TABLE`, `RULE`, `FROM`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/rql/rule-query/sharding/show-broadcast-table-rule.cn.md b/docs/document/content/reference/distsql/syntax/rql/rule-query/sharding/show-broadcast-table-rule.cn.md
new file mode 100644
index 00000000000..4f49fe1b07f
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rql/rule-query/sharding/show-broadcast-table-rule.cn.md
@@ -0,0 +1,74 @@
++++
+title = "SHOW BROADCAST TABLE RULE"
+weight = 15
++++
+
+## 描述
+
+`SHOW BROADCAST TABLE RULES` 语法用于查询指定数据库中具有广播规则的表
+
+### 语法定义
+
+```sql
+ShowBroadcastTableRule ::=
+  'SHOW' 'BROADCAST' 'TABLE' 'RULES' ('FROM' databaseName)? 
+
+databaseName ::=
+  identifier
+```
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE`； 如未使用 `DATABASE` 则会提示 `No database selected`。
+
+### 返回值说明
+
+｜ 列              ｜ 说明      ｜
+｜-----------------｜-----------｜
+｜ broadcast_table ｜ 广播表名称 ｜
+
+### 示例
+
+- 查询指定数据库中具有广播规则的表
+
+```sql
+SHOW BROADCAST TABLE RULES FROM test1;
+```
+
+```sql
+mysql> SHOW BROADCAST TABLE RULES FROM test1;
++-----------------+
+| broadcast_table |
++-----------------+
+| t_a             |
+| t_b             |
+| t_c             |
++-----------------+
+3 rows in set (0.00 sec)
+```
+
+- 查询当前逻辑库中具有广播规则的表
+
+```sql
+SHOW BROADCAST TABLE RULES;
+```
+
+```sql
+mysql> SHOW BROADCAST TABLE RULES;
++-----------------+
+| broadcast_table |
++-----------------+
+| t_a             |
+| t_b             |
+| t_c             |
++-----------------+
+3 rows in set (0.00 sec)
+```
+
+### 保留字
+
+`SHOW`、`BROADCAST`、`TABLE`、`RULES`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/rql/rule-query/sharding/show-broadcast-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rql/rule-query/sharding/show-broadcast-table-rule.en.md
new file mode 100644
index 00000000000..8c9bd1b2ed8
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/rql/rule-query/sharding/show-broadcast-table-rule.en.md
@@ -0,0 +1,74 @@
++++
+title = "SHOW BROADCAST TABLE RULE"
+weight = 15
++++
+
+## Description
+
+The `SHOW BROADCAST TABLE RULE` syntax is used to broadcast tables for specified database.
+
+### Syntax
+
+```sql
+ShowBroadcastTableRule ::=
+  'SHOW' 'BROADCAST' 'TABLE' 'RULES' ('FROM' databaseName)? 
+
+databaseName ::=
+  identifier
+```
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+### Return value description
+
+| Column                | Description           |
+| --------------------- | --------------------- |
+| broadcast_table       | Broadcast table name  |
+
+### Example
+
+- Query broadcast tables for specified database.
+
+```sql
+SHOW BROADCAST TABLE RULES FROM test1;
+```
+
+```sql
+mysql> SHOW BROADCAST TABLE RULES FROM test1;
++-----------------+
+| broadcast_table |
++-----------------+
+| t_a             |
+| t_b             |
+| t_c             |
++-----------------+
+3 rows in set (0.00 sec)
+```
+
+- Query broadcast table for current database.
+
+```sql
+SHOW BROADCAST TABLE RULES;
+```
+
+```sql
+mysql> SHOW BROADCAST TABLE RULES;
++-----------------+
+| broadcast_table |
++-----------------+
+| t_a             |
+| t_b             |
+| t_c             |
++-----------------+
+3 rows in set (0.00 sec)
+```
+
+### Reserved word
+
+`SHOW`, `BROADCAST`, `TABLE`, `RULES`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)

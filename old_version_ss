commit 6b4f2d0b3b4998e3f9667dc46e58e1dedec73c2b
Author: Zhengqiang Duan <duanzhengqiang@apache.org>
Date:   Thu Dec 29 15:14:39 2022 +0800

    Add data masking document (#23155)
    
    * Add data masking document
    
    * update document

diff --git a/docs/document/content/dev-manual/mask.cn.md b/docs/document/content/dev-manual/mask.cn.md
new file mode 100644
index 00000000000..1bf7f3197ef
--- /dev/null
+++ b/docs/document/content/dev-manual/mask.cn.md
@@ -0,0 +1,28 @@
++++
+pre = "<b>5.15. </b>"
+title = "数据脱敏"
+weight = 15
+chapter = true
++++
+
+## MaskAlgorithm
+
+### 全限定类名
+
+[`org.apache.shardingsphere.mask.spi.MaskAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/api/src/main/java/org/apache/shardingsphere/mask/spi/MaskAlgorithm.java)
+
+### 定义
+
+数据脱敏算法
+
+### 已知实现
+
+| *配置标识*                        | *详细说明*           | *全限定类名*                                                                                                                                                                                                                                                            |
+|-------------------------------|------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
+| MD5                           | 基于 MD5 的数据脱敏算法   | [`org.apache.shardingsphere.mask.algorithm.hash.MD5MaskAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/hash/MD5MaskAlgorithm.java)                 |
+| KEEP_FIRST_N_LAST_M           | 保留前 n 后 m 数据脱敏算法 | [`org.apache.shardingsphere.mask.algorithm.cover.KEEP_FIRST_N_LAST_M`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/KeepFirstNLastMMaskAlgorithm.java)                 |
+| KEEP_FROM_X_TO_Y              | 保留自 x 至 y 数据脱敏算法 | [`org.apache.shardingsphere.mask.algorithm.cover.KEEP_FROM_X_TO_Y`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/KeepFromXToYMaskAlgorithm.java)                 |
+| MASK_FIRST_N_LAST_M           | 遮盖前 n 后 m 数据脱敏算法 | [`org.apache.shardingsphere.mask.algorithm.cover.MASK_FIRST_N_LAST_M`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskFirstNLastMMaskAlgorithm.java)                 |
+| MASK_FROM_X_TO_Y              | 遮盖自 x 至 y 数据脱敏算法 | [`org.apache.shardingsphere.mask.algorithm.cover.MASK_FROM_X_TO_Y`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskFromXToYMaskAlgorithm.java)                 |
+| MASK_BEFORE_SPECIAL_CHARS     | 特殊字符前遮盖数据脱敏算法   | [`org.apache.shardingsphere.mask.algorithm.cover.MASK_BEFORE_SPECIAL_CHARS`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskBeforeSpecialCharsAlgorithm.java)                 |
+| MASK_AFTER_SPECIAL_CHARS      | 特殊字符后遮盖数据脱敏算法   | [`org.apache.shardingsphere.mask.algorithm.cover.MASK_AFTER_SPECIAL_CHARS`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskAfterSpecialCharsAlgorithm.java)                 |
diff --git a/docs/document/content/dev-manual/mask.en.md b/docs/document/content/dev-manual/mask.en.md
new file mode 100644
index 00000000000..690ceb81dd2
--- /dev/null
+++ b/docs/document/content/dev-manual/mask.en.md
@@ -0,0 +1,28 @@
++++
+pre = "<b>5.15. </b>"
+title = "Data Masking"
+weight = 15
+chapter = true
++++
+
+## MaskAlgorithm
+
+### Fully-qualified class name
+
+[`org.apache.shardingsphere.mask.spi.MaskAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/api/src/main/java/org/apache/shardingsphere/mask/spi/MaskAlgorithm.java)
+
+### Definition
+
+Data masking algorithm definition
+
+### Implementation classes
+
+| *Configuration Type* | *Description*                                    | *Fully-qualified class name*                                                                                                                                                                                                                                       |
+|-------------------------------|--------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
+| MD5                           | Data masking algorithm based on MD5              | [`org.apache.shardingsphere.mask.algorithm.hash.MD5MaskAlgorithm`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/hash/MD5MaskAlgorithm.java)                 |
+| KEEP_FIRST_N_LAST_M           | Keep first n last m data masking algorithm       | [`org.apache.shardingsphere.mask.algorithm.cover.KEEP_FIRST_N_LAST_M`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/KeepFirstNLastMMaskAlgorithm.java)                 |
+| KEEP_FROM_X_TO_Y              | Keep from x to y data masking algorithm          | [`org.apache.shardingsphere.mask.algorithm.cover.KEEP_FROM_X_TO_Y`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/KeepFromXToYMaskAlgorithm.java)                 |
+| MASK_FIRST_N_LAST_M           | Mask first n last m data masking algorithm       | [`org.apache.shardingsphere.mask.algorithm.cover.MASK_FIRST_N_LAST_M`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskFirstNLastMMaskAlgorithm.java)                 |
+| MASK_FROM_X_TO_Y              | Mask from x to y data masking algorithm          | [`org.apache.shardingsphere.mask.algorithm.cover.MASK_FROM_X_TO_Y`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskFromXToYMaskAlgorithm.java)                 |
+| MASK_BEFORE_SPECIAL_CHARS     | Mask before special chars data masking algorithm | [`org.apache.shardingsphere.mask.algorithm.cover.MASK_BEFORE_SPECIAL_CHARS`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskBeforeSpecialCharsAlgorithm.java)                 |
+| MASK_AFTER_SPECIAL_CHARS      | Mask after special chars data masking algorithm  | [`org.apache.shardingsphere.mask.algorithm.cover.MASK_AFTER_SPECIAL_CHARS`](https://github.com/apache/shardingsphere/blob/master/features/mask/core/src/main/java/org/apache/shardingsphere/mask/algorithm/cover/MaskAfterSpecialCharsAlgorithm.java)                 |
diff --git a/docs/document/content/features/mask/_index.cn.md b/docs/document/content/features/mask/_index.cn.md
new file mode 100644
index 00000000000..de345f7466c
--- /dev/null
+++ b/docs/document/content/features/mask/_index.cn.md
@@ -0,0 +1,27 @@
++++
+pre = "<b>3.11. </b>"
+title = "数据脱敏"
+weight = 11
+chapter = true
++++
+
+## 背景
+
+随着《网络安全法》的颁布施行，对个人隐私数据的保护已经上升到法律层面。传统的应用系统普遍缺少对个人隐私数据的保护措施。数据脱敏，可实现在不需要对生产数据库中的数据进行任何改变的情况下，依据用户定义的脱敏规则，对生产数据库返回的数据进行专门的加密、遮盖和替换，确保生产环境的敏感数据能够得到保护。
+
+## 挑战
+
+在真实业务场景中，相关业务开发团队则往往需要根据脱敏需求，自行实现并维护一套脱敏功能，而脱敏功能往往是耦合在各个业务逻辑中，不同的业务系统难以复用，而当脱敏场景发生改变时，自行维护的脱敏功能往往又面临着重构或修改的风险。
+
+## 目标
+
+根据业界对脱敏的需求及业务改造痛点，提供了一套完整、安全、透明化、低改造成本的数据脱敏整合解决方案，是 Apache ShardingSphere 数据脱敏模块的主要设计目标。
+
+## 应用场景
+
+不论是快速上线新业务，还是已经上线的成熟业务，都可以接入 ShardingSphere 脱敏功能，快速地完成脱敏规则的配置。客户无需开发耦合于业务系统的脱敏功能，不需要改动任何业务逻辑和 SQL 就能够透明化地使用脱敏功能。
+
+## 相关参考
+
+- [配置：数据脱敏](/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/mask/)
+- [开发者指南：数据脱敏](/cn/dev-manual/mask/)
diff --git a/docs/document/content/features/mask/_index.en.md b/docs/document/content/features/mask/_index.en.md
new file mode 100644
index 00000000000..c706b3e23fd
--- /dev/null
+++ b/docs/document/content/features/mask/_index.en.md
@@ -0,0 +1,29 @@
++++
+pre = "<b>3.11. </b>"
+title = "Data Masking"
+weight = 11
+chapter = true
++++
+
+## Background
+
+With promulgation and implementation of "Network Security Law", protection of personal privacy data has risen to the legal level. Traditional application systems generally lack protection measures for personal privacy data.
+Data mask can realize special encryption, masking and replacement of the data returned by the production database according to user-defined mask rules without any changes to the data in the production database to ensure the sensitivity of the production environment data can be protected.
+
+## Challenges
+
+In real business scenarios, relevant business development teams often need to implement and maintain a set of masking functions by themselves according to data masking requirements, and the masking functions are often coupled in various business logics, and different business systems are difficult to reuse. When the masking scene changes, the masking function maintained by itself often faces the risk of refactoring or modification.
+
+## Goal
+
+According to industry's needs for data masking and the pain points of business transformation, it provides a complete, safe, transparent, and low transformation cost data masking integration solution, which is the main design goal of the Apache ShardingSphere data masking module.
+
+## Application Scenarios
+
+Whether it is a new business that is launched quickly or a mature business that has already been launched, you can access the data masking function of ShardingSphere to quickly complete the configuration of mask rules. 
+Customers can use data masking function transparently without developing a masking function coupled to the business system, and without changing any business logic and SQL.
+
+## Related References
+
+- [Configuration: Data Mask](/en/user-manual/shardingsphere-jdbc/yaml-config/rules/mask/)
+- [Developer Guide: Data Mask](/en/dev-manual/mask/)
diff --git a/docs/document/content/features/mask/concept.cn.md b/docs/document/content/features/mask/concept.cn.md
new file mode 100644
index 00000000000..9ea823fde65
--- /dev/null
+++ b/docs/document/content/features/mask/concept.cn.md
@@ -0,0 +1,8 @@
++++
+title = "核心概念"
+weight = 1
++++
+
+## 逻辑列
+
+用于计算脱敏列的逻辑名称，它是 SQL 中列的逻辑标识。
diff --git a/docs/document/content/features/mask/concept.en.md b/docs/document/content/features/mask/concept.en.md
new file mode 100644
index 00000000000..3269942aac3
--- /dev/null
+++ b/docs/document/content/features/mask/concept.en.md
@@ -0,0 +1,8 @@
++++
+title = "Core Concept"
+weight = 1
++++
+
+## Logic column
+
+The logical name used to calculate masked column, which is logical identifier of column in SQL.
diff --git a/docs/document/content/features/mask/limitations.cn.md b/docs/document/content/features/mask/limitations.cn.md
new file mode 100644
index 00000000000..2fe49482dc3
--- /dev/null
+++ b/docs/document/content/features/mask/limitations.cn.md
@@ -0,0 +1,6 @@
++++
+title = "使用限制"
+weight = 2
++++
+
+- 脱敏列只支持字符串类型，不支持其他非字符串类型。 
diff --git a/docs/document/content/features/mask/limitations.en.md b/docs/document/content/features/mask/limitations.en.md
new file mode 100644
index 00000000000..2755691a167
--- /dev/null
+++ b/docs/document/content/features/mask/limitations.en.md
@@ -0,0 +1,6 @@
++++
+title = "Limitations"
+weight = 2
++++
+
+- Masked columns only support string types, not other non-string types.
diff --git a/docs/document/content/user-manual/common-config/builtin-algorithm/mask.cn.md b/docs/document/content/user-manual/common-config/builtin-algorithm/mask.cn.md
new file mode 100644
index 00000000000..d6672b23fa8
--- /dev/null
+++ b/docs/document/content/user-manual/common-config/builtin-algorithm/mask.cn.md
@@ -0,0 +1,136 @@
++++
+title = "脱敏算法"
+weight = 9
++++
+
+## 背景信息
+
+脱敏算法是 Apache ShardingSphere 的脱敏功能使用的算法，ShardingSphere 内置了多种算法，可以让用户方便使用。
+
+## 参数解释
+
+### 哈希脱敏算法
+
+#### MD5 脱敏算法
+
+类型：MD5
+
+可配置属性：
+
+| *名称*   | *数据类型* | *说明*  |
+|--------| --------- |-------|
+| salt   | String    | 盐值（可选）|
+
+### 遮盖脱敏算法
+
+#### KEEP_FIRST_N_LAST_M 脱敏算法
+
+类型：KEEP_FIRST_N_LAST_M
+
+可配置属性：
+
+| *名称*         | *数据类型* | *说明*  |
+|--------------|--------|-------|
+| first-n      | int    | 前 n 位 |
+| last-m       | int    | 后 n 位 |
+| replace-char | String | 替换字符  |
+
+#### KEEP_FROM_X_TO_Y 脱敏算法
+
+类型：KEEP_FROM_X_TO_Y
+
+可配置属性：
+
+| *名称*         | *数据类型* | *说明*           |
+|--------------|--------|----------------|
+| from-x       | int    | 起始位置（从 0 开始）   |
+| to-y         | int    | 结束位置（从 0 开始）   |
+| replace-char | String | 替换字符           |
+
+#### MASK_FIRST_N_LAST_M 脱敏算法
+
+类型：MASK_FIRST_N_LAST_M
+
+可配置属性：
+
+| *名称*         | *数据类型* | *说明*           |
+|--------------|--------|----------------|
+| first-n      | int    | 前 n 位 |
+| last-m       | int    | 后 n 位 |
+| replace-char | String | 替换字符  |
+
+#### MASK_FROM_X_TO_Y 脱敏算法
+
+类型：MASK_FROM_X_TO_Y
+
+可配置属性：
+
+| *名称*         | *数据类型* | *说明*           |
+|--------------|--------|----------------|
+| from-x       | int    | 起始位置（从 0 开始）   |
+| to-y         | int    | 结束位置（从 0 开始）   |
+| replace-char | String | 替换字符           |
+
+#### MASK_BEFORE_SPECIAL_CHARS 脱敏算法
+
+类型：MASK_BEFORE_SPECIAL_CHARS
+
+可配置属性：
+
+| *名称*         | *数据类型* | *说明*         |
+|--------------|--------|--------------|
+| special-chars       | String | 特殊字符（首次出现）   |
+| replace-char | String | 替换字符         |
+
+#### MASK_AFTER_SPECIAL_CHARS 脱敏算法
+
+类型：MASK_AFTER_SPECIAL_CHARS
+
+可配置属性：
+
+| *名称*         | *数据类型* | *说明*         |
+|--------------|--------|--------------|
+| special-chars       | String | 特殊字符（首次出现）   |
+| replace-char | String | 替换字符         |
+
+### 替换脱敏算法
+
+TODO
+
+## 操作步骤
+1. 在脱敏规则中配置脱敏算法；
+2. 为脱敏算法指定脱敏算法类型。
+
+## 配置示例
+```yaml
+rules:
+- !MASK
+  tables:
+    t_user:
+      columns:
+        password:
+          maskAlgorithm: md5_mask
+        email:
+          maskAlgorithm: mask_before_special_chars_mask
+        telephone:
+          maskAlgorithm: keep_first_n_last_m_mask
+
+  maskAlgorithms:
+    md5_mask:
+      type: MD5
+    mask_before_special_chars_mask:
+      type: MASK_BEFORE_SPECIAL_CHARS
+      props:
+        special-chars: '@'
+        replace-char: '*'
+    keep_first_n_last_m_mask:
+      type: KEEP_FIRST_N_LAST_M
+      props:
+        first-n: 3
+        last-m: 4
+        replace-char: '*'
+```
+
+## 相关参考
+- [核心特性：数据脱敏](/cn/features/mask/)
+- [开发者指南：数据脱敏](/cn/dev-manual/mask/)
diff --git a/docs/document/content/user-manual/common-config/builtin-algorithm/mask.en.md b/docs/document/content/user-manual/common-config/builtin-algorithm/mask.en.md
new file mode 100644
index 00000000000..465c963596c
--- /dev/null
+++ b/docs/document/content/user-manual/common-config/builtin-algorithm/mask.en.md
@@ -0,0 +1,136 @@
++++
+title = "Data Masking Algorithm"
+weight = 9
++++
+
+## Background
+
+Data masking algorithms are by the mask features of Apache ShardingSphere. A variety of algorithms are built-in to make it easy for users to fully leverage the feature.
+
+## Parameters
+
+### Hash Data Masking Algorithm
+
+#### MD5 Data Masking Algorithm
+
+Type: MD5
+
+Attributes:
+
+| *Name* | *DataType* | *Description*        |
+|--------| ---------- |----------------------|
+| salt   | String     | Salt value(optional) |
+
+### Mask Data Masking Algorithm
+
+#### KEEP_FIRST_N_LAST_M Data Masking Algorithm
+
+Type: KEEP_FIRST_N_LAST_M
+
+Attributes:
+
+| *Name* | *DataType* | *Description*     |
+|--------------|--------|-------------------|
+| first-n      | int    | first n substring |
+| last-m       | int    | last m substring  |
+| replace-char | String | replace char      |
+
+#### KEEP_FROM_X_TO_Y Data Masking Algorithm
+
+Type: KEEP_FROM_X_TO_Y
+
+Attributes:
+
+| *Name* | *DataType* | *Description*           |
+|--------------|--------|-------------------------|
+| from-x       | int    | start position (from 0) |
+| to-y         | int    | end position (from 0)   |
+| replace-char | String | replace char            |
+
+#### MASK_FIRST_N_LAST_M Data Masking Algorithm
+
+Type: MASK_FIRST_N_LAST_M
+
+Attributes:
+
+| *Name* | *DataType* | *Description*           |
+|--------------|--------|----------------|
+| first-n      | int    | first n substring |
+| last-m       | int    | last m substring |
+| replace-char | String | replace char  |
+
+#### MASK_FROM_X_TO_Y Data Masking Algorithm
+
+Type: MASK_FROM_X_TO_Y
+
+Attributes:
+
+| *Name* | *DataType* | *Description*           |
+|--------------|--------|----------------|
+| from-x       | int    | start position (from 0) |
+| to-y         | int    | end position (from 0)   |
+| replace-char | String | replace char            |
+
+#### MASK_BEFORE_SPECIAL_CHARS Data Masking Algorithm
+
+Type: MASK_BEFORE_SPECIAL_CHARS
+
+Attributes:
+
+| *Name* | *DataType* | *Description*                    |
+|--------------|--------|----------------------------------|
+| special-chars       | String | Special chars (first appearance) |
+| replace-char | String | replace char                             |
+
+#### MASK_AFTER_SPECIAL_CHARS Data Masking Algorithm
+
+Type: MASK_AFTER_SPECIAL_CHARS
+
+Attributes:
+
+| *Name* | *DataType* | *Description*                    |
+|--------------|--------|----------------------------------|
+| special-chars       | String | Special chars (first appearance) |
+| replace-char | String | replace char                     |
+
+### Replace Data Masking Algorithm
+
+TODO
+
+## Operating Procedure
+1. Configure maskAlgorithms in a mask rule.
+2. Use relevant algorithm types in maskAlgorithms.
+
+## Configuration Examples
+```yaml
+rules:
+- !MASK
+  tables:
+    t_user:
+      columns:
+        password:
+          maskAlgorithm: md5_mask
+        email:
+          maskAlgorithm: mask_before_special_chars_mask
+        telephone:
+          maskAlgorithm: keep_first_n_last_m_mask
+
+  maskAlgorithms:
+    md5_mask:
+      type: MD5
+    mask_before_special_chars_mask:
+      type: MASK_BEFORE_SPECIAL_CHARS
+      props:
+        special-chars: '@'
+        replace-char: '*'
+    keep_first_n_last_m_mask:
+      type: KEEP_FIRST_N_LAST_M
+      props:
+        first-n: 3
+        last-m: 4
+        replace-char: '*'
+```
+
+## Related References
+- [Core Feature: Data Masking](/en/features/mask/)
+- [Developer Guide: Data Masking](/en/dev-manual/mask/)
diff --git a/docs/document/content/user-manual/error-code/sql-error-code.cn.md b/docs/document/content/user-manual/error-code/sql-error-code.cn.md
index e70bc98b847..ca229d45792 100644
--- a/docs/document/content/user-manual/error-code/sql-error-code.cn.md
+++ b/docs/document/content/user-manual/error-code/sql-error-code.cn.md
@@ -223,6 +223,12 @@ SQL 错误码以标准的 SQL State，Vendor Code 和详细错误信息提供，
 | HY004     | 20820       | Shadow column \`%s\` of table \`%s\` does not support \`%s\` type. |
 | 42000     | 20840       | Insert value of index \`%s\` can not support for shadow. |
 
+### 数据脱敏
+
+| SQL State | Vendor Code | 错误信息                                                       |
+| --------- |-------------|------------------------------------------------------------|
+| HY000     | 20980       | Mask algorithm \`%s\` initialization failed, reason is: %s |
+
 ## 其他异常
 
 | SQL State | Vendor Code | 错误信息 |
diff --git a/docs/document/content/user-manual/error-code/sql-error-code.en.md b/docs/document/content/user-manual/error-code/sql-error-code.en.md
index 234bd5f1e63..1fd61618b4c 100644
--- a/docs/document/content/user-manual/error-code/sql-error-code.en.md
+++ b/docs/document/content/user-manual/error-code/sql-error-code.en.md
@@ -223,6 +223,12 @@ SQL error codes provide by standard `SQL State`, `Vendor Code` and `Reason`, whi
 | HY004     | 20820       | Shadow column \`%s\` of table \`%s\` does not support \`%s\` type. |
 | 42000     | 20840       | Insert value of index \`%s\` can not support for shadow. |
 
+### Data Masking
+
+| SQL State | Vendor Code | Reason                                                       |
+| --------- |-------------|------------------------------------------------------------|
+| HY000     | 20980       | Mask algorithm \`%s\` initialization failed, reason is: %s |
+
 ## Other Exception
 
 | SQL State | Vendor Code | Reason |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md
index 6b0744b689d..3a517d58715 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md
@@ -47,3 +47,12 @@ algorithmConfigs.put("shadowAlgorithmName", new AlgorithmConfiguration("xxx", ne
 Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
 algorithmConfigs.put("discoveryTypeName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
+
+## 脱敏算法
+
+```java
+// maskAlgorithmName 由用户指定，需要和脱敏规则中的 maskAlgorithm 属性一致
+// type 和 props，请参考脱敏内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/mask/
+Map<String, AlgorithmConfiguration> algorithmConfigs = new LinkedHashMap<>(1, 1);
+algorithmConfigs.put("maskAlgorithmName", new AlgorithmConfiguration("xxx", new Properties()));
+```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md
index 04e889b1fc9..fc5b2eaf01b 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md
@@ -47,3 +47,12 @@ algorithmConfigs.put("shadowAlgorithmName", new AlgorithmConfiguration("xxx", ne
 Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
 algorithmConfigs.put("discoveryTypeName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
+
+## Data Masking
+
+```java
+// maskAlgorithmName is specified by users, and its property should be consistent with that of maskAlgorithm in mask rules.
+// type and props, please refer to the built-in mask algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/mask/
+Map<String, AlgorithmConfiguration> algorithmConfigs = new LinkedHashMap<>(1, 1);
+algorithmConfigs.put("maskAlgorithmName", new AlgorithmConfiguration("xxx", new Properties()));
+```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mask.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mask.cn.md
new file mode 100644
index 00000000000..70ccf890195
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mask.cn.md
@@ -0,0 +1,105 @@
++++
+title = "数据脱敏"
+weight = 10
++++
+
+## 背景信息
+
+数据脱敏 Java API 规则配置允许用户直接通过编写 Java 代码的方式，完成 ShardingSphereDataSource 对象的创建，Java API 的配置方式非常灵活，不需要依赖额外的 jar 包 就能够集成各种类型的业务系统。
+
+## 参数解释
+
+### 配置入口
+
+类名称：org.apache.shardingsphere.mask.api.config.MaskRuleConfiguration
+
+可配置属性：
+
+| *名称*                       | *数据类型*                                  | *说明*                              | *默认值* |
+|-----------------------------|--------------------------------------------|-----------------------------------| ------- |
+| tables (+)                  | Collection\<MaskTableRuleConfiguration\>   | 脱敏表规则配置                           |        |
+| maskAlgorithms (+)          | Map\<String, AlgorithmConfiguration\>      | 脱敏算法名称和配置                         |        |
+
+### 脱敏表规则配置
+
+类名称：org.apache.shardingsphere.mask.api.config.rule.MaskTableRuleConfiguration
+
+可配置属性：
+
+| *名称*       | *数据类型*                                   | *说明*          |
+| ----------- |---------------------------------------------|---------------|
+| name        | String                                      | 表名称           |
+| columns (+) | Collection\<MaskColumnRuleConfiguration\>   | 脱敏列规则配置列表     |
+
+### 脱敏列规则配置
+
+类名称：org.apache.shardingsphere.mask.api.config.rule.MaskColumnRuleConfiguration
+
+可配置属性：
+
+| *名称*                    | *数据类型* | *说明*   |
+| ------------------------- | -------- |--------|
+| logicColumn               | String   | 逻辑列名称  |
+| maskAlgorithm              | String   | 脱敏算法名称 |
+
+### 加解密算法配置
+
+类名称：org.apache.shardingsphere.infra.config.algorithm.AlgorithmConfiguration
+
+可配置属性：
+
+| *名称*      |*数据类型*   | *说明*      |
+| ---------- | ---------- |-----------|
+| name       | String     | 脱敏算法名称    |
+| type       | String     | 脱敏算法类型   |
+| properties | Properties | 脱敏算法属性配置 |
+
+算法类型的详情，请参见[内置脱敏算法列表](/cn/user-manual/common-config/builtin-algorithm/mask)。
+
+## 操作步骤
+
+1. 创建真实数据源映射关系，key 为数据源逻辑名称，value 为 DataSource 对象；
+1. 创建脱敏规则对象 MaskRuleConfiguration，并初始化对象中的脱敏表对象 MaskTableRuleConfiguration、脱敏算法等参数；
+1. 调用 ShardingSphereDataSourceFactory 对象的 createDataSource 方法，创建 ShardingSphereDataSource。
+
+## 配置示例
+
+```java
+import java.util.Collections;
+import java.util.LinkedHashMap;
+import java.util.Properties;
+
+public final class MaskDatabasesConfiguration implements ExampleConfiguration {
+    
+    @Override
+    public DataSource getDataSource() {
+        MaskColumnRuleConfiguration passwordColumn = new MaskColumnRuleConfiguration("password", "md5_mask");
+        MaskColumnRuleConfiguration emailColumn = new MaskColumnRuleConfiguration("email", "mask_before_special_chars_mask");
+        MaskColumnRuleConfiguration telephoneColumn = new MaskColumnRuleConfiguration("telephone", "keep_first_n_last_m_mask");
+        MaskTableRuleConfiguration maskTableRuleConfig = new MaskTableRuleConfiguration("t_user", Arrays.asList(passwordColumn, emailColumn, telephoneColumn));
+        Map<String, AlgorithmConfiguration> maskAlgorithmConfigs = new LinkedHashMap<>(3, 1);
+        maskAlgorithmConfigs.put("md5_mask", new AlgorithmConfiguration("MD5", new Properties()));
+        Properties beforeSpecialCharsProps = new Properties();
+        beforeSpecialCharsProps.put("special-chars", "@");
+        beforeSpecialCharsProps.put("replace-char", "*");
+        maskAlgorithmConfigs.put("mask_before_special_chars_mask", new AlgorithmConfiguration("MASK_BEFORE_SPECIAL_CHARS", beforeSpecialCharsProps));
+        Properties keepFirstNLastMProps = new Properties();
+        keepFirstNLastMProps.put("first-n", "3");
+        keepFirstNLastMProps.put("last-m", "4");
+        keepFirstNLastMProps.put("replace-char", "*");
+        maskAlgorithmConfigs.put("keep_first_n_last_m_mask", new AlgorithmConfiguration("KEEP_FIRST_N_LAST_M", keepFirstNLastMProps));
+        MaskRuleConfiguration maskRuleConfig = new MaskRuleConfiguration(Collections.singleton(maskTableRuleConfig), maskAlgorithmConfigs);
+        try {
+            return ShardingSphereDataSourceFactory.createDataSource(DataSourceUtil.createDataSource("demo_ds"), Collections.singleton(maskRuleConfig), new Properties());
+        } catch (final SQLException ex) {
+            ex.printStackTrace();
+            return null;
+        }
+    }
+}
+```
+
+## 相关参考
+
+- [数据脱敏的核心特性](/cn/features/mask/ )
+- [数据脱敏的开发者指南](/cn/dev-manual/mask/)
\ No newline at end of file
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mask.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mask.en.md
new file mode 100644
index 00000000000..c2a4e59a6fe
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mask.en.md
@@ -0,0 +1,105 @@
++++
+title = "Data Masking"
+weight = 10
++++
+
+## Background
+
+The data masking Java API rule configuration allows users to directly create ShardingSphereDataSource objects by writing java code. The Java API configuration method is very flexible and can integrate various types of business systems without relying on additional jar packages.
+
+## Parameters
+
+### Root Configuration
+
+Class name: org.apache.shardingsphere.mask.api.config.MaskRuleConfiguration
+
+Attributes:
+
+| *Name*                    | *DataType*                                  | *Description*                                                                                  | *Default Value* |
+| ------------------------- | ------------------------------------------- |------------------------------------------------------------------------------------------------| --------------- |
+| tables (+)                | Collection\<MaskTableRuleConfiguration\> | Mask table rule configurations                                                                 |                 |
+| encryptors (+)            | Map\<String, AlgorithmConfiguration\>       | Mask algorithm name and configurations                                                         |                 |
+
+### Mask Table Rule Configuration
+
+Class name: org.apache.shardingsphere.mask.api.config.rule.MaskTableRuleConfiguration
+
+Attributes:
+
+| *Name*                    | *DataType*                                   | *Description*                   |
+| ------------------------- | -------------------------------------------- |---------------------------------|
+| name                      | String                                       | Table name                      |
+| columns (+)               | Collection\<MaskColumnRuleConfiguration\> | Mask column rule configurations |
+
+### Mask Column Rule Configuration
+
+Class name: org.apache.shardingsphere.mask.api.config.rule.MaskColumnRuleConfiguration
+
+Attributes:
+
+| *Name*                     | *DataType* | *Description*       |
+|----------------------------| ---------- |---------------------|
+| logicColumn                | String     | Logic column name   |
+| maskAlgorithm              | String     | Mask algorithm name |
+
+### Mask Algorithm Configuration
+
+Class name: org.apache.shardingsphere.infra.config.algorithm.AlgorithmConfiguration
+
+Attributes:
+
+| *Name*     | *DataType* | *Description*                |
+| ---------- | ---------- |------------------------------|
+| name       | String     | Mask algorithm name          |
+| type       | String     | Mask algorithm type          |
+| properties | Properties | Mask algorithm properties |
+
+Please refer to [Built-in Data Masking Algorithm List](/en/user-manual/common-config/builtin-algorithm/mask) for more details about type of algorithm.
+
+## Procedure
+
+1. Create a real data source mapping relationship, where key is the logical name of the data source and value is the datasource object.
+1. Create the data masking rule object MaskRuleConfiguration, and initialize the mask table object MaskTableRuleConfiguration, mask algorithm and other parameters in the object.
+1. Call createDataSource of ShardingSphereDataSourceFactory to create  ShardingSphereDataSource.
+
+## Sample
+
+```java
+import java.util.Collections;
+import java.util.LinkedHashMap;
+import java.util.Properties;
+
+public final class MaskDatabasesConfiguration implements ExampleConfiguration {
+    
+    @Override
+    public DataSource getDataSource() {
+        MaskColumnRuleConfiguration passwordColumn = new MaskColumnRuleConfiguration("password", "md5_mask");
+        MaskColumnRuleConfiguration emailColumn = new MaskColumnRuleConfiguration("email", "mask_before_special_chars_mask");
+        MaskColumnRuleConfiguration telephoneColumn = new MaskColumnRuleConfiguration("telephone", "keep_first_n_last_m_mask");
+        MaskTableRuleConfiguration maskTableRuleConfig = new MaskTableRuleConfiguration("t_user", Arrays.asList(passwordColumn, emailColumn, telephoneColumn));
+        Map<String, AlgorithmConfiguration> maskAlgorithmConfigs = new LinkedHashMap<>(3, 1);
+        maskAlgorithmConfigs.put("md5_mask", new AlgorithmConfiguration("MD5", new Properties()));
+        Properties beforeSpecialCharsProps = new Properties();
+        beforeSpecialCharsProps.put("special-chars", "@");
+        beforeSpecialCharsProps.put("replace-char", "*");
+        maskAlgorithmConfigs.put("mask_before_special_chars_mask", new AlgorithmConfiguration("MASK_BEFORE_SPECIAL_CHARS", beforeSpecialCharsProps));
+        Properties keepFirstNLastMProps = new Properties();
+        keepFirstNLastMProps.put("first-n", "3");
+        keepFirstNLastMProps.put("last-m", "4");
+        keepFirstNLastMProps.put("replace-char", "*");
+        maskAlgorithmConfigs.put("keep_first_n_last_m_mask", new AlgorithmConfiguration("KEEP_FIRST_N_LAST_M", keepFirstNLastMProps));
+        MaskRuleConfiguration maskRuleConfig = new MaskRuleConfiguration(Collections.singleton(maskTableRuleConfig), maskAlgorithmConfigs);
+        try {
+            return ShardingSphereDataSourceFactory.createDataSource(DataSourceUtil.createDataSource("demo_ds"), Collections.singleton(maskRuleConfig), new Properties());
+        } catch (final SQLException ex) {
+            ex.printStackTrace();
+            return null;
+        }
+    }
+}
+```
+
+## Related References
+
+- [The feature description of Data Masking](/en/features/mask/ )
+- [Dev Guide of Data Masking](/en/dev-manual/mask/)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.cn.md
index ae50f0955a3..622b8cb7022 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.cn.md
@@ -61,3 +61,15 @@ discoveryTypes:
     props:
       xxx: xxx
 ```
+
+## 脱敏算法
+
+```yaml
+maskAlgorithms:
+  # maskAlgorithmName 由用户指定，需要和脱敏规则中的 maskAlgorithm 属性一致
+  <maskAlgorithmName>:
+    # type 和 props，请参考脱敏内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/mask/
+    type: xxx
+    props:
+      xxx: xxx
+```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.en.md
index d527e5f0218..2083d909e20 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.en.md
@@ -59,3 +59,15 @@ discoveryTypes:
     props:
       xxx: xxx
 ```
+
+## Data Masking
+
+```yaml
+maskAlgorithms:
+  # maskAlgorithmName is specified by users, and its property should be consistent with that of maskAlgorithm in mask rules.
+  <maskAlgorithmName>:
+    # type and props, please refer to the built-in mask algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/mask/
+    type: xxx
+    props:
+      xxx: xxx
+```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mask.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mask.cn.md
new file mode 100644
index 00000000000..e103128fd35
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mask.cn.md
@@ -0,0 +1,86 @@
++++
+title = "数据脱敏"
+weight = 11
++++
+
+## 背景信息
+
+数据脱敏 YAML 配置方式良好的可读性，通过 YAML 格式，能够快速地理解脱敏规则之间的依赖关系，ShardingSphere 会根据 YAML 配置，自动完成 ShardingSphereDataSource 对象的创建，减少用户不必要的编码工作。
+
+## 参数解释
+
+```yaml
+rules:
+- !MASK
+  tables:
+    <table_name> (+): # 脱敏表名称
+      columns:
+        <column_name> (+): # 脱敏列名称
+          maskAlgorithm: # 脱敏算法
+
+  # 脱敏算法配置
+  maskAlgorithms:
+    <mask_algorithm_name> (+): # 脱敏算法名称
+      type: # 脱敏算法类型
+      props: # 脱敏算法属性配置
+      # ...
+```
+
+算法类型的详情，请参见[内置脱敏算法列表](/cn/user-manual/common-config/builtin-algorithm/mask)。
+
+## 操作步骤
+
+1. 在 YAML 文件中配置数据加密规则，包含数据源、脱敏规则、全局属性等配置项；
+2. 调用 YamlShardingSphereDataSourceFactory 对象的 createDataSource 方法，根据 YAML 文件中的配置信息创建 ShardingSphereDataSource。
+
+## 配置示例
+
+数据脱敏 YAML 配置如下：
+
+```yaml
+dataSources:
+  unique_ds:
+    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    jdbcUrl: jdbc:mysql://localhost:3306/demo_ds?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
+    username: root
+    password:
+
+rules:
+- !MASK
+  tables:
+    t_user:
+      columns:
+        password:
+          maskAlgorithm: md5_mask
+        email:
+          maskAlgorithm: mask_before_special_chars_mask
+        telephone:
+          maskAlgorithm: keep_first_n_last_m_mask
+
+  maskAlgorithms:
+    md5_mask:
+      type: MD5
+    mask_before_special_chars_mask:
+      type: MASK_BEFORE_SPECIAL_CHARS
+      props:
+        special-chars: '@'
+        replace-char: '*'
+    keep_first_n_last_m_mask:
+      type: KEEP_FIRST_N_LAST_M
+      props:
+        first-n: 3
+        last-m: 4
+        replace-char: '*'
+```
+
+然后通过 YamlShardingSphereDataSourceFactory 的 createDataSource 方法创建数据源。
+
+```java
+YamlShardingSphereDataSourceFactory.createDataSource(getFile());
+```
+
+## 相关参考
+
+- [核心特性：数据脱敏](/cn/features/mask/)
+- [开发者指南：数据脱敏](/cn/dev-manual/mask/)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mask.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mask.en.md
new file mode 100644
index 00000000000..1da7129a2e0
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mask.en.md
@@ -0,0 +1,111 @@
++++
+title = "Data Masking"
+weight = 11
++++
+
+## Background
+
+The YAML configuration approach to data masking is highly readable, with the YAML format enabling a quick understanding of dependencies between mask rules.
+Based on the YAML configuration, ShardingSphere automatically completes the creation of ShardingSphereDataSource objects, reducing unnecessary coding efforts for users.
+
+## Parameters
+
+```yaml
+rules:
+- !ENCRYPT
+  tables:
+    <table_name> (+): # Encrypt table name
+      columns:
+        <column_name> (+): # Encrypt logic column name
+          plainColumn (?): # Plain column name
+          cipherColumn: # Cipher column name
+          encryptorName: # Cipher encrypt algorithm name
+          assistedQueryColumn (?):  # Assisted query column name
+          assistedQueryEncryptorName:  # Assisted query encrypt algorithm name
+          likeQueryColumn (?):  # Like query column name
+          likeQueryEncryptorName:  # Like query encrypt algorithm name
+      queryWithCipherColumn(?): # The current table whether query with cipher column for data encrypt. 
+    
+  # Encrypt algorithm configuration
+  encryptors:
+    <encrypt_algorithm_name> (+): # Encrypt algorithm name
+      type: # Encrypt algorithm type
+      props: # Encrypt algorithm properties
+        # ...
+
+  queryWithCipherColumn: # Whether query with cipher column for data encrypt. User you can use plaintext to query if have
+
+rules:
+- !MASK
+  tables:
+    <table_name> (+): # Mask table name
+      columns:
+        <column_name> (+): # Mask logic column name
+          maskAlgorithm: # Mask algorithm name
+
+  # Mask algorithm configuration
+  maskAlgorithms:
+    <mask_algorithm_name> (+): # Mask algorithm name
+      type: # Mask algorithm type
+      props: # Mask algorithm properties
+      # ...
+```
+
+Please refer to [Built-in Mask Algorithm List](/en/user-manual/common-config/builtin-algorithm/mask) for more details about type of algorithm.
+
+## Procedure
+
+1. Configure data masking rules in the YAML file, including data sources, mask rules, global attributes, and other configuration items.
+2. Using the createDataSource of calling the YamlShardingSphereDataSourceFactory object to create ShardingSphereDataSource based on the configuration information in the YAML file.
+
+## Sample
+
+The data masking YAML configurations are as follows:
+
+```yaml
+dataSources:
+  unique_ds:
+    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    jdbcUrl: jdbc:mysql://localhost:3306/demo_ds?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
+    username: root
+    password:
+
+rules:
+- !MASK
+  tables:
+    t_user:
+      columns:
+        password:
+          maskAlgorithm: md5_mask
+        email:
+          maskAlgorithm: mask_before_special_chars_mask
+        telephone:
+          maskAlgorithm: keep_first_n_last_m_mask
+
+  maskAlgorithms:
+    md5_mask:
+      type: MD5
+    mask_before_special_chars_mask:
+      type: MASK_BEFORE_SPECIAL_CHARS
+      props:
+        special-chars: '@'
+        replace-char: '*'
+    keep_first_n_last_m_mask:
+      type: KEEP_FIRST_N_LAST_M
+      props:
+        first-n: 3
+        last-m: 4
+        replace-char: '*'
+```
+
+Read the YAML configuration to create a data source according to the createDataSource method of YamlShardingSphereDataSourceFactory.
+
+```java
+YamlShardingSphereDataSourceFactory.createDataSource(getFile());
+```
+
+## Related References
+
+- [Core Feature: Data Masking](/en/features/mask/)
+- [Developer Guide: Data Masking](/en/dev-manual/mask/)

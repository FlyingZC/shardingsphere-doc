commit 4fc58b6d78361874a8bcacd6800ae79556cd6b46
Author: Raigor <raigor.jiang@gmail.com>
Date:   Sun Dec 4 15:53:39 2022 +0800

    Remove AlgorithmProvided related classes and documents. (#22640)

diff --git a/docs/document/content/dev-manual/configuration.cn.md b/docs/document/content/dev-manual/configuration.cn.md
index 17bf7aab3b7..3e98997d6c8 100644
--- a/docs/document/content/dev-manual/configuration.cn.md
+++ b/docs/document/content/dev-manual/configuration.cn.md
@@ -24,15 +24,10 @@ chapter = true
 | TransactionRuleConfiguration                         | 用于将事务用户配置转化为事务规则对象                       | [`org.apache.shardingsphere.transaction.rule.builder.TransactionRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/kernel/transaction/core/src/main/java/org/apache/shardingsphere/transaction/rule/builder/TransactionRuleBuilder.java)                                                                                 |
 | SingleTableRuleConfiguration                         | 用于将单表用户配置转化为单表规则对象                       | [`org.apache.shardingsphere.singletable.rule.builder.SingleTableRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/kernel/single-table/core/src/main/java/org/apache/shardingsphere/singletable/rule/builder/SingleTableRuleBuilder.java)                                                                               |
 | ShardingRuleConfiguration                            | 用于将分片用户配置转化为分片规则对象                       | [`org.apache.shardingsphere.sharding.rule.builder.ShardingRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/rule/builder/ShardingRuleBuilder.java)                                                                                                 |
-| AlgorithmProvidedShardingRuleConfiguration           | 用于将 Spring Context 下基于算法的分片用户配置转化为分片规则对象 | [`org.apache.shardingsphere.sharding.rule.builder.AlgorithmProvidedShardingRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/rule/builder/AlgorithmProvidedShardingRuleBuilder.java)                                                               |
 | ReadwriteSplittingRuleConfiguration                  | 用于将读写分离用户配置转化为读写分离规则对象                   | [`org.apache.shardingsphere.readwritesplitting.rule.builder.ReadwriteSplittingRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/rule/builder/ReadwriteSplittingRuleBuilder.java)                                   |
-| AlgorithmProvidedReadwriteSplittingRuleConfiguration | 用于将基于算法的读写分离用户配置转化为读写分离规则对象              | [`org.apache.shardingsphere.readwritesplitting.rule.builder.AlgorithmProvidedReadwriteSplittingRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/rule/builder/AlgorithmProvidedReadwriteSplittingRuleBuilder.java) |
 | DatabaseDiscoveryRuleConfiguration                   | 用于将数据库发现用户配置转化为数据库发现规则对象                 | [`org.apache.shardingsphere.dbdiscovery.rule.builder.DatabaseDiscoveryRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/db-discovery/core/src/main/java/org/apache/shardingsphere/dbdiscovery/rule/builder/DatabaseDiscoveryRuleBuilder.java)                                                                 |
-| AlgorithmProvidedDatabaseDiscoveryRuleConfiguration  | 用于将基于算法的数据库发现用户配置转化为数据库发现规则对象            | [`org.apache.shardingsphere.dbdiscovery.rule.builder.AlgorithmProvidedDatabaseDiscoveryRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/db-discovery/core/src/main/java/org/apache/shardingsphere/dbdiscovery/rule/builder/AlgorithmProvidedDatabaseDiscoveryRuleBuilder.java)                               |
 | EncryptRuleConfiguration                             | 用于将加密用户配置转化为加密规则对象                       | [`org.apache.shardingsphere.encrypt.rule.builder.EncryptRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/rule/builder/EncryptRuleBuilder.java)                                                                                                       |
-| AlgorithmProvidedEncryptRuleConfiguration            | 用于将基于算法的加密用户配置转化为加密规则对象                  | [`org.apache.shardingsphere.encrypt.rule.builder.AlgorithmProvidedEncryptRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/rule/builder/AlgorithmProvidedEncryptRuleBuilder.java)                                                                     |
 | ShadowRuleConfiguration                              | 用于将影子库用户配置转化为影子库规则对象                     | [`org.apache.shardingsphere.shadow.rule.builder.ShadowRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/rule/builder/ShadowRuleBuilder.java)                                                                                                             |
-| AlgorithmProvidedShadowRuleConfiguration             | 用于将基于算法的影子库用户配置转化为影子库规则对象                | [`org.apache.shardingsphere.shadow.rule.builder.AlgorithmProvidedShadowRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/rule/builder/AlgorithmProvidedShadowRuleBuilder.java)                                                                           |
 
 ## YamlRuleConfigurationSwapper
 
@@ -53,15 +48,10 @@ chapter = true
 | TRANSACTION         | 用于将事务的 YAML 配置转化为事务标准配置           | [`org.apache.shardingsphere.transaction.yaml.swapper.YamlTransactionRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/transaction/core/src/main/java/org/apache/shardingsphere/transaction/yaml/swapper/YamlTransactionRuleConfigurationSwapper.java) |
 | SINGLE              | 用于将单表的 YAML 配置转化为单表标准配置           | [`org.apache.shardingsphere.singletable.yaml.config.swapper.YamlSingleTableRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/single-table/core/src/main/java/org/apache/shardingsphere/singletable/yaml/config/swapper/YamlSingleTableRuleConfigurationSwapper.java) |
 | SHARDING            | 用于将分片的 YAML 配置转化为分片标准配置           | [`org.apache.shardingsphere.sharding.yaml.swapper.YamlShardingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/YamlShardingRuleConfigurationSwapper.java) |
-| SHARDING            | 用于将基于算法的分片配置转化为分片标准配置           | [`org.apache.shardingsphere.sharding.yaml.swapper.YamlShardingRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/YamlShardingRuleAlgorithmProviderConfigurationSwapper.java) |
 | READWRITE_SPLITTING | 用于将读写分离的 YAML 配置转化为读写分离标准配置     | [`org.apache.shardingsphere.readwritesplitting.yaml.swapper.YamlReadwriteSplittingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/yaml/swapper/YamlReadwriteSplittingRuleConfigurationSwapper.java) |
-| READWRITE_SPLITTING | 用于将基于算法的读写分离配置转化为读写分离标准配置    | [`org.apache.shardingsphere.readwritesplitting.yaml.swapper.YamlReadwriteSplittingRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/yaml/swapper/YamlReadwriteSplittingRuleAlgorithmProviderConfigurationSwapper.java) |
 | DB_DISCOVERY        | 用于将数据库发现的 YAML 配置转化为数据库发现标准配置  | [`org.apache.shardingsphere.dbdiscovery.yaml.swapper.YamlDatabaseDiscoveryRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/db-discovery/core/src/main/java/org/apache/shardingsphere/dbdiscovery/yaml/swapper/YamlDatabaseDiscoveryRuleConfigurationSwapper.java) |
-| DB_DISCOVERY        | 用于将基于算法的数据库发现配置转化为数据库发现标准配置 | [`org.apache.shardingsphere.dbdiscovery.yaml.swapper.YamlDatabaseDiscoveryRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/db-discovery/core/src/main/java/org/apache/shardingsphere/dbdiscovery/yaml/swapper/YamlDatabaseDiscoveryRuleAlgorithmProviderConfigurationSwapper.java) |
 | ENCRYPT             | 用于将加密的 YAML 配置转化为加密标准配置           | [`org.apache.shardingsphere.encrypt.yaml.swapper.YamlEncryptRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/yaml/swapper/YamlEncryptRuleConfigurationSwapper.java) |
-| ENCRYPT             | 用于将基于算法的加密配置转化为加密标准配置           | [`org.apache.shardingsphere.encrypt.yaml.swapper.YamlEncryptRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/yaml/swapper/YamlEncryptRuleAlgorithmProviderConfigurationSwapper.java) |
 | SHADOW              | 用于将影子库的 YAML 配置转化为影子库标准配置        | [`org.apache.shardingsphere.shadow.yaml.swapper.YamlShadowRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/yaml/swapper/YamlShadowRuleConfigurationSwapper.java) |
-| SHADOW              | 用于将基于算法的影子库配置转化为影子库标准配置        | [`org.apache.shardingsphere.shadow.yaml.swapper.YamlShadowRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/yaml/swapper/YamlShadowRuleAlgorithmProviderConfigurationSwapper.java) |
 | SQL_TRANSLATOR      | 用于将 SQL 转换的 YAML 配置转化为 SQL 转换标准配置 | [`org.apache.shardingsphere.sqltranslator.yaml.swapper.YamlSQLTranslatorRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-translator/core/src/main/java/org/apache/shardingsphere/sqltranslator/yaml/swapper/YamlSQLTranslatorRuleConfigurationSwapper.java) |
 
 ## ShardingSphereYamlConstruct
diff --git a/docs/document/content/dev-manual/configuration.en.md b/docs/document/content/dev-manual/configuration.en.md
index a55df1ba467..c87e2893773 100644
--- a/docs/document/content/dev-manual/configuration.en.md
+++ b/docs/document/content/dev-manual/configuration.en.md
@@ -24,15 +24,10 @@ Used to convert user configurations into rule objects
 | TransactionRuleConfiguration                         | Used to convert transaction user configuration into transaction rule objects                                   | [`org.apache.shardingsphere.transaction.rule.builder.TransactionRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/kernel/transaction/core/src/main/java/org/apache/shardingsphere/transaction/rule/builder/TransactionRuleBuilder.java)                                                                                 |
 | SingleTableRuleConfiguration                         | Used to convert single-table user configuration into a single-table rule objects                               | [`org.apache.shardingsphere.singletable.rule.builder.SingleTableRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/kernel/single-table/core/src/main/java/org/apache/shardingsphere/singletable/rule/builder/SingleTableRuleBuilder.java)                                                                               |
 | ShardingRuleConfiguration                            | Used to convert sharding user configuration into sharding rule objects                                         | [`org.apache.shardingsphere.sharding.rule.builder.ShardingRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/rule/builder/ShardingRuleBuilder.java)                                                                                                 |
-| AlgorithmProvidedShardingRuleConfiguration           | Used to convert algorithm-based sharding user configuration under Spring Context into sharding rule objects    | [`org.apache.shardingsphere.sharding.rule.builder.AlgorithmProvidedShardingRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/rule/builder/AlgorithmProvidedShardingRuleBuilder.java)                                                               |
 | ReadwriteSplittingRuleConfiguration                  | Used to convert read-write splitting user configuration into read-write splitting rule objects                 | [`org.apache.shardingsphere.readwritesplitting.rule.builder.ReadwriteSplittingRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/rule/builder/ReadwriteSplittingRuleBuilder.java)                                   |
-| AlgorithmProvidedReadwriteSplittingRuleConfiguration | Used to convert algorithm-based read-write splitting user configuration into read-write splitting rule objects | [`org.apache.shardingsphere.readwritesplitting.rule.builder.AlgorithmProvidedReadwriteSplittingRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/rule/builder/AlgorithmProvidedReadwriteSplittingRuleBuilder.java) |
 | DatabaseDiscoveryRuleConfiguration                   | Used to convert database discovery user configuration into database discovery rule objects                     | [`org.apache.shardingsphere.dbdiscovery.rule.builder.DatabaseDiscoveryRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/db-discovery/core/src/main/java/org/apache/shardingsphere/dbdiscovery/rule/builder/DatabaseDiscoveryRuleBuilder.java)                                                                 |
-| AlgorithmProvidedDatabaseDiscoveryRuleConfiguration  | Used to convert algorithm-based database discovery user configuration into database discovery rule objects     | [`org.apache.shardingsphere.dbdiscovery.rule.builder.AlgorithmProvidedDatabaseDiscoveryRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/db-discovery/core/src/main/java/org/apache/shardingsphere/dbdiscovery/rule/builder/AlgorithmProvidedDatabaseDiscoveryRuleBuilder.java)                               |
 | EncryptRuleConfiguration                             | Used to convert encrypted user configuration into encryption rule objects                                      | [`org.apache.shardingsphere.encrypt.rule.builder.EncryptRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/rule/builder/EncryptRuleBuilder.java)                                                                                                       |
-| AlgorithmProvidedEncryptRuleConfiguration            | Used to convert algorithm-based encryption user configuration into encryption rule objects                     | [`org.apache.shardingsphere.encrypt.rule.builder.AlgorithmProvidedEncryptRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/rule/builder/AlgorithmProvidedEncryptRuleBuilder.java)                                                                     |
 | ShadowRuleConfiguration                              | Used to convert shadow database user configuration into shadow database rule objects                           | [`org.apache.shardingsphere.shadow.rule.builder.ShadowRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/rule/builder/ShadowRuleBuilder.java)                                                                                                             |
-| AlgorithmProvidedShadowRuleConfiguration             | Used to convert algorithm-based shadow database user configuration into shadow database rule objects           | [`org.apache.shardingsphere.shadow.rule.builder.AlgorithmProvidedShadowRuleBuilder`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/rule/builder/AlgorithmProvidedShadowRuleBuilder.java)                                                                           |
 
 ## YamlRuleConfigurationSwapper
 
@@ -53,15 +48,10 @@ Used to convert YAML configuration to standard user configuration
 | TRANSACTION          | Used to convert the YAML configuration of the transaction into the standard configuration of the transaction           | [`org.apache.shardingsphere.transaction.yaml.swapper.YamlTransactionRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/transaction/core/src/main/java/org/apache/shardingsphere/transaction/yaml/swapper/YamlTransactionRuleConfigurationSwapper.java) |
 | SINGLE               | Used to convert the YAML configuration of the single table into the standard configuration of the single table         | [`org.apache.shardingsphere.singletable.yaml.config.swapper.YamlSingleTableRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/single-table/core/src/main/java/org/apache/shardingsphere/singletable/yaml/config/swapper/YamlSingleTableRuleConfigurationSwapper.java) |
 | SHARDING             | Used to convert the YAML configuration of the sharding into the standard configuration of the sharding                 | [`org.apache.shardingsphere.sharding.yaml.swapper.YamlShardingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/YamlShardingRuleConfigurationSwapper.java) |
-| SHARDING             | Used to convert algorithm-based sharding configuration into sharding standard configuration                            | [`org.apache.shardingsphere.sharding.yaml.swapper.YamlShardingRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/YamlShardingRuleAlgorithmProviderConfigurationSwapper.java) |
 | READWRITE_SPLITTING  | Used to convert the YAML configuration of read-write splitting into the standard configuration of read-write splitting | [`org.apache.shardingsphere.readwritesplitting.yaml.swapper.YamlReadwriteSplittingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/yaml/swapper/YamlReadwriteSplittingRuleConfigurationSwapper.java) |
-| READWRITE_SPLITTING  | Used to convert algorithm-based read-write splitting configuration into read-write splitting standard configuration    | [`org.apache.shardingsphere.readwritesplitting.yaml.swapper.YamlReadwriteSplittingRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/yaml/swapper/YamlReadwriteSplittingRuleAlgorithmProviderConfigurationSwapper.java) |
 | DB_DISCOVERY         | Used to convert the YAML configuration of database discovery into the standard configuration of database discovery     | [`org.apache.shardingsphere.dbdiscovery.yaml.swapper.YamlDatabaseDiscoveryRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/db-discovery/core/src/main/java/org/apache/shardingsphere/dbdiscovery/yaml/swapper/YamlDatabaseDiscoveryRuleConfigurationSwapper.java) |
-| DB_DISCOVERY         | Used to convert algorithm-based database discovery configuration into database discovery standard configuration        | [`org.apache.shardingsphere.dbdiscovery.yaml.swapper.YamlDatabaseDiscoveryRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/db-discovery/core/src/main/java/org/apache/shardingsphere/dbdiscovery/yaml/swapper/YamlDatabaseDiscoveryRuleAlgorithmProviderConfigurationSwapper.java) |
 | ENCRYPT              | Used to convert encrypted YAML configuration into encrypted standard configuration                                     | [`org.apache.shardingsphere.encrypt.yaml.swapper.YamlEncryptRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/yaml/swapper/YamlEncryptRuleConfigurationSwapper.java) |
-| ENCRYPT              | Used to convert algorithm-based encryption configuration into encryption standard configuration                        | [`org.apache.shardingsphere.encrypt.yaml.swapper.YamlEncryptRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/yaml/swapper/YamlEncryptRuleAlgorithmProviderConfigurationSwapper.java) |
 | SHADOW               | Used to convert the YAML configuration of the shadow database into the standard configuration of the shadow database   | [`org.apache.shardingsphere.shadow.yaml.swapper.YamlShadowRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/yaml/swapper/YamlShadowRuleConfigurationSwapper.java) |
-| SHADOW               | Used to convert algorithm-based shadow database configuration into shadow database standard configuration              | [`org.apache.shardingsphere.shadow.yaml.swapper.YamlShadowRuleAlgorithmProviderConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/yaml/swapper/YamlShadowRuleAlgorithmProviderConfigurationSwapper.java) |
 | SQL_TRANSLATOR       | Used to convert the YAML configuration of the SQL transformation to the SQL transformation standard configuration      | [`org.apache.shardingsphere.sqltranslator.yaml.swapper.YamlSQLTranslatorRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-translator/core/src/main/java/org/apache/shardingsphere/sqltranslator/yaml/swapper/YamlSQLTranslatorRuleConfigurationSwapper.java) |
 
 ## ShardingSphereYamlConstruct
diff --git a/docs/document/content/faq/_index.cn.md b/docs/document/content/faq/_index.cn.md
index 3dfd9e80b0f..ee4c5cc330f 100644
--- a/docs/document/content/faq/_index.cn.md
+++ b/docs/document/content/faq/_index.cn.md
@@ -334,44 +334,3 @@ ShardingSphere 中很多功能实现类的加载方式是通过 [SPI](/cn/concep
 ```
 更多关于 alias 使用方法请参考 [Proxool官网](http://proxool.sourceforge.net/configure.html)。
 PS：sourceforge 网站需要翻墙访问。
-
-### [其他] 使用 Spring Boot 2.x 集成 ShardingSphere 时，配置文件中的属性设置不生效？
-
-回答：
-
-需要特别注意，Spring Boot 2.x 环境下配置文件的属性名称约束为仅允许小写字母、数字和短横线，即 `[a-z][0-9]` 和 `-`。
-原因如下:
-Spring Boot 2.x 环境下，ShardingSphere 通过 Binder 来绑定配置文件，属性名称不规范（如：驼峰或下划线等）会导致属性设置不生效从而校验属性值时抛出 `NullPointerException` 异常。参考以下错误示例：
-下划线示例：database_inline
-```
-spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
-spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.props.algorithm-expression=ds-$->{user_id % 2}
-```
-```
-Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'database_inline': Initialization of bean failed; nested exception is java.lang.NullPointerException: Inline sharding algorithm expression cannot be null.
-        ... 
-Caused by: java.lang.NullPointerException: Inline sharding algorithm expression cannot be null.
-        at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:897)
-        at org.apache.shardingsphere.sharding.algorithm.sharding.inline.InlineShardingAlgorithm.getAlgorithmExpression(InlineShardingAlgorithm.java:58)
-        at org.apache.shardingsphere.sharding.algorithm.sharding.inline.InlineShardingAlgorithm.init(InlineShardingAlgorithm.java:52)
-        at org.apache.shardingsphere.spring.boot.registry.AbstractAlgorithmProvidedBeanRegistry.postProcessAfterInitialization(AbstractAlgorithmProvidedBeanRegistry.java:98)
-        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
-        ... 
-```
-驼峰示例：databaseInline
-```
-spring.shardingsphere.rules.sharding.sharding-algorithms.databaseInline.type=INLINE
-spring.shardingsphere.rules.sharding.sharding-algorithms.databaseInline.props.algorithm-expression=ds-$->{user_id % 2}
-```
-```
-Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseInline': Initialization of bean failed; nested exception is java.lang.NullPointerException: Inline sharding algorithm expression cannot be null.
-        ... 
-Caused by: java.lang.NullPointerException: Inline sharding algorithm expression cannot be null.
-        at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:897)
-        at org.apache.shardingsphere.sharding.algorithm.sharding.inline.InlineShardingAlgorithm.getAlgorithmExpression(InlineShardingAlgorithm.java:58)
-        at org.apache.shardingsphere.sharding.algorithm.sharding.inline.InlineShardingAlgorithm.init(InlineShardingAlgorithm.java:52)
-        at org.apache.shardingsphere.spring.boot.registry.AbstractAlgorithmProvidedBeanRegistry.postProcessAfterInitialization(AbstractAlgorithmProvidedBeanRegistry.java:98)
-        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
-        ... 
-```
-从异常堆栈中分析可知： `AbstractAlgorithmProvidedBeanRegistry.registerBean` 方法调用 `PropertyUtil.containPropertyPrefix(environment, prefix)` 方法判断指定前缀 `prefix` 的配置是否存在，而 `PropertyUtil.containPropertyPrefix(environment, prefix)` 方法，在 Spring Boot 2.x 环境下使用了 Binder，不规范的属性名称（如：驼峰或下划线等）会导致属性设置不生效。
diff --git a/docs/document/content/faq/_index.en.md b/docs/document/content/faq/_index.en.md
index 342cd52f2d6..5b1d42e55aa 100644
--- a/docs/document/content/faq/_index.en.md
+++ b/docs/document/content/faq/_index.en.md
@@ -339,44 +339,3 @@ The followings are core codes from ProxoolDataSource getConnection method in `Pr
     }
 ```
 For more alias usages, please refer to [Proxool](http://proxool.sourceforge.net/configure.html) official website.
-
-### [Other] The property settings in the configuration file do not take effect when integrating ShardingSphere with Spring Boot 2.x ?
-
-Answer:
-
-Note that the property name in the Spring Boot 2.x environment is constrained to allow only lowercase letters, numbers and short transverse lines, `[a-z][0-9]` and `-`.
-Reasons:
-In the Spring Boot 2.x environment, ShardingSphere binds the properties through Binder, and the unsatisfied property name (such as camel case or underscore.) can throw a `NullPointerException` exception when the property setting does not work to check the property value. Refer to the following error examples:
-Underscore case: database_inline
-```
-spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.type=INLINE
-spring.shardingsphere.rules.sharding.sharding-algorithms.database_inline.props.algorithm-expression=ds-$->{user_id % 2}
-```
-```
-Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'database_inline': Initialization of bean failed; nested exception is java.lang.NullPointerException: Inline sharding algorithm expression cannot be null.
-    ... 
-Caused by: java.lang.NullPointerException: Inline sharding algorithm expression cannot be null.
-    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:897)
-    at org.apache.shardingsphere.sharding.algorithm.sharding.inline.InlineShardingAlgorithm.getAlgorithmExpression(InlineShardingAlgorithm.java:58)
-    at org.apache.shardingsphere.sharding.algorithm.sharding.inline.InlineShardingAlgorithm.init(InlineShardingAlgorithm.java:52)
-    at org.apache.shardingsphere.spring.boot.registry.AbstractAlgorithmProvidedBeanRegistry.postProcessAfterInitialization(AbstractAlgorithmProvidedBeanRegistry.java:98)
-    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
-    ... 
-```
-Camel case：databaseInline
-```
-spring.shardingsphere.rules.sharding.sharding-algorithms.databaseInline.type=INLINE
-spring.shardingsphere.rules.sharding.sharding-algorithms.databaseInline.props.algorithm-expression=ds-$->{user_id % 2}
-```
-```
-Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'databaseInline': Initialization of bean failed; nested exception is java.lang.NullPointerException: Inline sharding algorithm expression cannot be null.
-    ... 
-Caused by: java.lang.NullPointerException: Inline sharding algorithm expression cannot be null.
-    at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:897)
-    at org.apache.shardingsphere.sharding.algorithm.sharding.inline.InlineShardingAlgorithm.getAlgorithmExpression(InlineShardingAlgorithm.java:58)
-    at org.apache.shardingsphere.sharding.algorithm.sharding.inline.InlineShardingAlgorithm.init(InlineShardingAlgorithm.java:52)
-    at org.apache.shardingsphere.spring.boot.registry.AbstractAlgorithmProvidedBeanRegistry.postProcessAfterInitialization(AbstractAlgorithmProvidedBeanRegistry.java:98)
-    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
-    ... 
-```
-From the exception stack, the `AbstractAlgorithmProvidedBeanRegistry.registerBean` method calls `PropertyUtil.containPropertyPrefix (environment, prefix)` , and `PropertyUtil.containPropertyPrefix (environment, prefix)` determines that the configuration of the specified prefix does not exist, while the method uses Binder in an unsatisfied property name (such as camelcase or underscore) causing property settings does not to take effect.

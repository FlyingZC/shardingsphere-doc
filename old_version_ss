commit 46b6f533fade9cfd41189075e875600b3c6bc332
Author: Hongsheng Zhong <zhonghongsheng@apache.org>
Date:   Thu Dec 1 19:57:42 2022 +0800

    Update migration build and usage doc (#22571)
    
    * Update build doc
    
    * Update usage doc

diff --git a/docs/document/content/user-manual/shardingsphere-proxy/migration/build.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/migration/build.cn.md
index 5f812670cd1..462eea7bcd1 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/migration/build.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/migration/build.cn.md
@@ -14,22 +14,9 @@ weight = 1
 
 ## 操作步骤
 
-1. 执行以下命令，编译生成 ShardingSphere-Proxy 二进制包：
+1. 获取 ShardingSphere-Proxy。详情请参见 [proxy 启动手册](/cn/user-manual/shardingsphere-proxy/startup/bin/)。
 
-```
-git clone --depth 1 https://github.com/apache/shardingsphere.git
-cd shardingsphere
-mvn clean install -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -Drat.skip=true -Djacoco.skip=true -DskipITs -DskipTests -Prelease
-```
-
-发布包：
-- /shardingsphere-distribution/shardingsphere-proxy-distribution/target/apache-shardingsphere-${latest.release.version}-shardingsphere-proxy-bin.tar.gz
-
-或者通过[下载页面]( https://shardingsphere.apache.org/document/current/cn/downloads/ )获取安装包。
-
-2. 解压缩 proxy 发布包，修改配置文件 `conf/config-sharding.yaml`。详情请参见 [proxy 启动手册](/cn/user-manual/shardingsphere-proxy/startup/bin/)。
-
-3. 修改配置文件 `conf/server.yaml`，详情请参见[模式配置](/cn/user-manual/shardingsphere-jdbc/yaml-config/mode/)。
+2. 修改配置文件 `conf/server.yaml`，详情请参见[模式配置](/cn/user-manual/shardingsphere-jdbc/yaml-config/mode/)。
 
 目前 `mode` 必须是 `Cluster`，需要提前启动对应的注册中心。
 
@@ -48,7 +35,7 @@ mode:
       operationTimeoutMilliseconds: 500
 ```
 
-4. 引入 JDBC 驱动。
+3. 引入 JDBC 驱动。
 
 proxy 已包含 PostgreSQL JDBC 驱动。
 
@@ -61,13 +48,13 @@ proxy 已包含 PostgreSQL JDBC 驱动。
 
 如果是异构迁移，源端支持范围更广的数据库。JDBC 驱动处理方式同上。
 
-5. 启动 ShardingSphere-Proxy：
+4. 启动 ShardingSphere-Proxy：
 
 ```
 sh bin/start.sh
 ```
 
-6. 查看 proxy 日志 `logs/stdout.log`，看到日志中出现：
+5. 查看 proxy 日志 `logs/stdout.log`，看到日志中出现：
 
 ```
 [INFO ] [main] o.a.s.p.frontend.ShardingSphereProxy - ShardingSphere-Proxy start success
@@ -75,9 +62,9 @@ sh bin/start.sh
 
 确认启动成功。
 
-7. 按需配置迁移
+6. 按需配置迁移
 
-7.1. 查询配置。
+6.1. 查询配置。
 
 ```sql
 SHOW MIGRATION RULE;
@@ -93,7 +80,7 @@ SHOW MIGRATION RULE;
 +--------------------------------------------------------------+--------------------------------------+------------------------------------------------------+
 ```
 
-7.2. 修改配置（可选）。
+6.2. 修改配置（可选）。
 
 因 migration rule 具有默认值，无需创建，仅提供 ALTER 语句。
 
@@ -162,7 +149,7 @@ READ(
 
 配置读取数据限流，其它配置使用默认值。
 
-7.3. 恢复配置。
+6.3. 恢复配置。
 
 如需恢复默认配置，也通过 ALTER 语句进行操作。
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/migration/build.en.md b/docs/document/content/user-manual/shardingsphere-proxy/migration/build.en.md
index cc389c6169e..b1135ad7752 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/migration/build.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/migration/build.en.md
@@ -14,22 +14,9 @@ For systems running on a single database that urgently need to securely and simp
 
 ## Procedure
 
-1. Run the following command to compile the ShardingSphere-Proxy binary package: 
+1. Get ShardingSphere-Proxy. Please refer to [proxy startup guide](/en/user-manual/shardingsphere-proxy/startup/bin/) for details.
 
-```
-git clone --depth 1 https://github.com/apache/shardingsphere.git
-cd shardingsphere
-mvn clean install -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -Drat.skip=true -Djacoco.skip=true -DskipITs -DskipTests -Prelease
-```
-
-Release package：
-- /shardingsphere-distribution/shardingsphere-proxy-distribution/target/apache-shardingsphere-${latest.release.version}-shardingsphere-proxy-bin.tar.gz
-
-Or you can get the installation package through the [Download Page](https://shardingsphere.apache.org/document/current/en/downloads/)
-
-2. Decompress the proxy release package and modify the configuration file `conf/config-sharding.yaml`. Please refer to [proxy startup guide](/en/user-manual/shardingsphere-proxy/startup/bin/) for details.
-
-3. Modify the configuration file `conf/server.yaml`. Please refer to [mode configuration](/en/user-manual/shardingsphere-jdbc/yaml-config/mode/) for details.
+2. Modify the configuration file `conf/server.yaml`. Please refer to [mode configuration](/en/user-manual/shardingsphere-jdbc/yaml-config/mode/) for details.
 
 Currently, `mode` must be `Cluster`, and the corresponding registry must be started in advance.
 
@@ -48,7 +35,7 @@ mode:
       operationTimeoutMilliseconds: 500
 ```
 
-4. Introduce JDBC driver.
+3. Introduce JDBC driver.
 
 Proxy has included JDBC driver of PostgreSQL.
 
@@ -61,13 +48,13 @@ If the backend is connected to the following databases, download the correspondi
 
 If you are migrating to a heterogeneous database, then you could use more types of database. Introduce JDBC driver as above too.
 
-5. Start ShardingSphere-Proxy:
+4. Start ShardingSphere-Proxy:
 
 ```
 sh bin/start.sh
 ```
 
-6. View the proxy log `logs/stdout.log`. If you see the following statements:
+5. View the proxy log `logs/stdout.log`. If you see the following statements:
 
 ```
 [INFO ] [main] o.a.s.p.frontend.ShardingSphereProxy - ShardingSphere-Proxy start success
@@ -75,9 +62,9 @@ sh bin/start.sh
 
 The startup will have been successful.
 
-7. Configure and migrate on demand.
+6. Configure and migrate on demand.
 
-7.1. Query configuration.
+6.1. Query configuration.
 
 ```sql
 SHOW MIGRATION RULE;
@@ -93,7 +80,7 @@ The default configuration is as follows.
 +--------------------------------------------------------------+--------------------------------------+------------------------------------------------------+
 ```
 
-7.2. Alter configuration (Optional).
+6.2. Alter configuration (Optional).
 
 Since the migration rule has default values, there is no need to create it, only the `ALTER` statement is provided.
 
@@ -162,7 +149,7 @@ READ(
 
 Configure data reading for traffic limit. Other configurations use default values.
 
-7.3. Restore configuration.
+6.3. Restore configuration.
 
 To restore the default configuration, also through the `ALTER` statement.
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.cn.md
index 9d6d80a4e9a..db5f7879c99 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.cn.md
@@ -162,8 +162,7 @@ SHOW MIGRATION LIST;
 ```
 
 示例结果：
-
-```sql
+```
 +---------------------------------------+---------+----------------------+--------+---------------------+-----------+
 | id                                    | tables  | job_item_count       | active | create_time         | stop_time |
 +---------------------------------------+---------+----------------------+--------+---------------------+-----------+
@@ -175,6 +174,10 @@ SHOW MIGRATION LIST;
 
 ```sql
 SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+示例结果：
+```
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
 | item | data_source | status                   | active | processed_records_count | inventory_finished_percentage | incremental_idle_seconds | error_message |
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
@@ -186,12 +189,15 @@ SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
 
 ```sql
 CHECK MIGRATION 'j01016e501b498ed1bdb2c373a2e85e2529a6' BY TYPE (NAME='CRC32_MATCH');
-Query OK, 0 rows affected (0.09 sec)
 ```
 
 数据一致性校验算法类型来自：
 ```sql
 SHOW MIGRATION CHECK ALGORITHMS;
+```
+
+示例结果：
+```
 +-------------+--------------------------------------------------------------+----------------------------+
 | type        | supported_database_types                                     | description                |
 +-------------+--------------------------------------------------------------+----------------------------+
@@ -207,7 +213,10 @@ SHOW MIGRATION CHECK ALGORITHMS;
 查询数据一致性校验进度：
 ```sql
 SHOW MIGRATION CHECK STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
-+---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
+```
+
+示例结果：
+```    +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
 | tables  | result | finished_percentage | remaining_seconds | check_begin_time        | check_end_time          | duration_seconds | error_message |
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
 | t_order | true   | 100                 | 0                 | 2022-10-13 11:18:15.171 | 2022-10-13 11:18:15.878 | 0                |               |
@@ -362,7 +371,6 @@ SHOW MIGRATION LIST;
 ```
 
 示例结果：
-
 ```sql
 +---------------------------------------+---------+----------------------+--------+---------------------+-----------+
 | id                                    | tables  | job_item_count       | active | create_time         | stop_time |
@@ -375,6 +383,10 @@ SHOW MIGRATION LIST;
 
 ```sql
 SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+示例结果：
+```
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
 | item | data_source | status                   | active | processed_records_count | inventory_finished_percentage | incremental_idle_seconds | error_message |
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
@@ -386,12 +398,15 @@ SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
 
 ```sql
 CHECK MIGRATION 'j01016e501b498ed1bdb2c373a2e85e2529a6';
-Query OK, 0 rows affected (0.09 sec)
 ```
 
 查询数据一致性校验进度：
 ```sql
 SHOW MIGRATION CHECK STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+示例结果：
+```
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
 | tables  | result | finished_percentage | remaining_seconds | check_begin_time        | check_end_time          | duration_seconds | error_message |
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
@@ -545,7 +560,6 @@ SHOW MIGRATION LIST;
 ```
 
 示例结果：
-
 ```sql
 +---------------------------------------+---------+----------------------+--------+---------------------+-----------+
 | id                                    | tables  | job_item_count       | active | create_time         | stop_time |
@@ -558,6 +572,10 @@ SHOW MIGRATION LIST;
 
 ```sql
 SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+示例结果：
+```
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
 | item | data_source | status                   | active | processed_records_count | inventory_finished_percentage | incremental_idle_seconds | error_message |
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
@@ -569,12 +587,15 @@ SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
 
 ```sql
 CHECK MIGRATION 'j01016e501b498ed1bdb2c373a2e85e2529a6';
-Query OK, 0 rows affected (0.09 sec)
 ```
 
 查询数据一致性校验进度：
 ```sql
 SHOW MIGRATION CHECK STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+示例结果：
+```
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
 | tables  | result | finished_percentage | remaining_seconds | check_begin_time        | check_end_time          | duration_seconds | error_message |
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.en.md b/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.en.md
index 5986640ccb5..0720067db5d 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.en.md
@@ -64,8 +64,6 @@ Result sample:
 
 1. Prepare the source database, table, and data in MySQL.
 
-Sample: 
-
 ```sql
 DROP DATABASE IF EXISTS migration_ds_0;
 CREATE DATABASE migration_ds_0 DEFAULT CHARSET utf8;
@@ -79,8 +77,6 @@ INSERT INTO t_order (order_id, user_id, status) VALUES (1,2,'ok'),(2,4,'ok'),(3,
 
 2. Prepare the target database in MySQL.
 
-Sample: 
-
 ```sql
 DROP DATABASE IF EXISTS migration_ds_10;
 CREATE DATABASE migration_ds_10 DEFAULT CHARSET utf8;
@@ -158,7 +154,6 @@ SHOW MIGRATION LIST;
 ```
 
 Result example:
-
 ```
 +---------------------------------------+---------+----------------------+--------+---------------------+-----------+
 | id                                    | tables  | job_item_count       | active | create_time         | stop_time |
@@ -169,8 +164,12 @@ Result example:
 
 5. View the data migration details.
 
-```
+```sql
 SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+Result example:
+```
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
 | item | data_source | status                   | active | processed_records_count | inventory_finished_percentage | incremental_idle_seconds | error_message |
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
@@ -180,15 +179,18 @@ SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
 
 6. Verify data consistency.
 
-```
+```sql
 CHECK MIGRATION 'j01016e501b498ed1bdb2c373a2e85e2529a6' BY TYPE (NAME='CRC32_MATCH');
-Query OK, 0 rows affected (0.09 sec)
 ```
 
 Data consistency check algorithm list:
 
-```
+```sql
 SHOW MIGRATION CHECK ALGORITHMS;
+```
+
+Result example:
+```
 +-------------+--------------------------------------------------------------+----------------------------+
 | type        | supported_database_types                                     | description                |
 +-------------+--------------------------------------------------------------+----------------------------+
@@ -204,6 +206,10 @@ If you are migrating to a heterogeneous database, then `DATA_MATCH` could be use
 Query data consistency check progress:
 ```sql
 SHOW MIGRATION CHECK STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+Result example:
+```
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
 | tables  | result | finished_percentage | remaining_seconds | check_begin_time        | check_end_time          | duration_seconds | error_message |
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
@@ -359,7 +365,6 @@ SHOW MIGRATION LIST;
 ```
 
 Result example:
-
 ```
 +---------------------------------------+---------+----------------------+--------+---------------------+-----------+
 | id                                    | tables  | job_item_count       | active | create_time         | stop_time |
@@ -370,8 +375,12 @@ Result example:
 
 5. View the data migration details.
 
-```
+```sql
 SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+Result example:
+```
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
 | item | data_source | status                   | active | processed_records_count | inventory_finished_percentage | incremental_idle_seconds | error_message |
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
@@ -389,6 +398,10 @@ Query OK, 0 rows affected (0.09 sec)
 Query data consistency check progress:
 ```sql
 SHOW MIGRATION CHECK STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+Result example:
+```
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
 | tables  | result | finished_percentage | remaining_seconds | check_begin_time        | check_end_time          | duration_seconds | error_message |
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
@@ -542,7 +555,6 @@ SHOW MIGRATION LIST;
 ```
 
 Result example:
-
 ```
 +---------------------------------------+---------+----------------------+--------+---------------------+-----------+
 | id                                    | tables  | job_item_count       | active | create_time         | stop_time |
@@ -553,8 +565,12 @@ Result example:
 
 5. View the data migration details.
 
-```
+```sql
 SHOW MIGRATION STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+Result example:
+```
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
 | item | data_source | status                   | active | processed_records_count | inventory_finished_percentage | incremental_idle_seconds | error_message |
 +------+-------------+--------------------------+--------+-------------------------+-------------------------------+--------------------------+---------------+
@@ -572,6 +588,10 @@ Query OK, 0 rows affected (0.09 sec)
 Query data consistency check progress:
 ```sql
 SHOW MIGRATION CHECK STATUS 'j01016e501b498ed1bdb2c373a2e85e2529a6';
+```
+
+Result example:
+```
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+
 | tables  | result | finished_percentage | remaining_seconds | check_begin_time        | check_end_time          | duration_seconds | error_message |
 +---------+--------+---------------------+-------------------+-------------------------+-------------------------+------------------+---------------+

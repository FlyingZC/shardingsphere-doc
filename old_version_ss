commit 960bd65745dbb334426c0306c7cf317328090a73
Author: gxxiong <xionggaoxiang@foxmail.com>
Date:   Tue Nov 15 10:38:46 2022 +0800

    Update spring-boot-starter rules on encrypt document (#22174)

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.cn.md
index bc4c851df04..ca3366d9ef2 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.cn.md
@@ -13,10 +13,13 @@ weight = 4
 spring.shardingsphere.datasource.names= # 省略数据源配置，请参考使用手册
 
 spring.shardingsphere.rules.encrypt.tables.<table-name>.query-with-cipher-column= # 该表是否使用加密列进行查询
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.cipher-column= # 加密列名称
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-column= # 查询列名称
 spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.plain-column= # 原文列名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.cipher-column= # 加密列名称
 spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.encryptor-name= # 加密算法名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-column= # 辅助查询列名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-encryptor-name# 辅助查询算法名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.like-query-column= # 模糊查询列名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.like-query-encryptor-name# 模糊查询算法名称
 
 # 加密算法配置
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.type= # 加密算法类型
@@ -45,15 +48,24 @@ spring.shardingsphere.datasource.ds.password=
 
 spring.shardingsphere.rules.encrypt.encryptors.name-encryptor.type=AES
 spring.shardingsphere.rules.encrypt.encryptors.name-encryptor.props.aes-key-value=123456abc
+spring.shardingsphere.rules.encrypt.encryptors.name-assisted-encryptor.type=AES
+spring.shardingsphere.rules.encrypt.encryptors.name-assisted-encryptor.props.aes-key-value=123456abc
+spring.shardingsphere.rules.encrypt.encryptors.name-like-encryptor.type=CHAR_DIGEST_LIKE
+spring.shardingsphere.rules.encrypt.encryptors.name-like-encryptor.props.delta=2
 spring.shardingsphere.rules.encrypt.encryptors.pwd-encryptor.type=AES
 spring.shardingsphere.rules.encrypt.encryptors.pwd-encryptor.props.aes-key-value=123456abc
 
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.cipher-column=username
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.encryptor-name=name-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.assisted-query-column=username_assisted
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.assisted-query-encryptor-name=name-assisted-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.like-query-column=username_like
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.like-query-encryptor-name=name-like-encryptor
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.cipher-column=pwd
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.encryptor-name=pwd-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.query-with-cipher-column=true
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.query-with-cipher-column=false
 
-spring.shardingsphere.props.query-with-cipher-column=true
 spring.shardingsphere.props.sql-show=true
 ```
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.en.md
index 7836712e628..da1a117c263 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.en.md
@@ -13,10 +13,13 @@ The configuration method for Spring Boot Starter Data Encryption is suitable for
 spring.shardingsphere.datasource.names= # Omit the data source configuration, please refer to the usage
 
 spring.shardingsphere.rules.encrypt.tables.<table-name>.query-with-cipher-column= # Whether the table uses cipher columns for query
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.cipher-column= # Cipher column name
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-column= # Assisted query column name
 spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.plain-column= # Plain column name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.cipher-column= # Cipher column name
 spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.encryptor-name= # Encrypt algorithm name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-column= # Assisted query column name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-encryptor-name# Assisted query encrypt algorithm name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.like-query-column= # Like query column name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.like-query-encryptor-name# Like query encrypt algorithm name
 
 # Encrypt algorithm configuration
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.type= # Encrypt algorithm type
@@ -45,15 +48,24 @@ spring.shardingsphere.datasource.ds.password=
 
 spring.shardingsphere.rules.encrypt.encryptors.name-encryptor.type=AES
 spring.shardingsphere.rules.encrypt.encryptors.name-encryptor.props.aes-key-value=123456abc
+spring.shardingsphere.rules.encrypt.encryptors.name-assisted-encryptor.type=AES
+spring.shardingsphere.rules.encrypt.encryptors.name-assisted-encryptor.props.aes-key-value=123456abc
+spring.shardingsphere.rules.encrypt.encryptors.name-like-encryptor.type=CHAR_DIGEST_LIKE
+spring.shardingsphere.rules.encrypt.encryptors.name-like-encryptor.props.delta=2
 spring.shardingsphere.rules.encrypt.encryptors.pwd-encryptor.type=AES
 spring.shardingsphere.rules.encrypt.encryptors.pwd-encryptor.props.aes-key-value=123456abc
 
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.cipher-column=username
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.encryptor-name=name-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.assisted-query-column=username_assisted
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.assisted-query-encryptor-name=name-assisted-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.like-query-column=username_like
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.like-query-encryptor-name=name-like-encryptor
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.cipher-column=pwd
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.encryptor-name=pwd-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.query-with-cipher-column=true
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.query-with-cipher-column=false
 
-spring.shardingsphere.props.query-with-cipher-column=true
 spring.shardingsphere.props.sql-show=true
 ```
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/mix.cn.md
index 5bcde158677..dfc0415d43a 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/mix.cn.md
@@ -40,10 +40,13 @@ spring.shardingsphere.rules.database-discovery.discovery-types.<discovery-type-n
 spring.shardingsphere.rules.database-discovery.discovery-types.<discovery-type-name>.props.group-name= # 数据库发现类型必要参数，如 MGR 的 group-name
 # 数据脱敏配置
 spring.shardingsphere.rules.encrypt.tables.<table-name>.query-with-cipher-column= # 该表是否使用加密列进行查询
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.cipher-column= # 加密列名称
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-column= # 查询列名称
 spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.plain-column= # 原文列名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.cipher-column= # 加密列名称
 spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.encryptor-name= # 加密算法名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-column= # 辅助查询列名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-encryptor-name# 辅助查询算法名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.like-query-column= # 模糊查询列名称
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.like-query-encryptor-name# 模糊查询算法名称
 # 加密算法配置
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.type= # 加密算法类型
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xxx= # 加密算法属性配置
@@ -82,12 +85,20 @@ spring.shardingsphere.rules.database-discovery.discovery-types.mgr.props.groupNa
 # 数据脱敏配置
 spring.shardingsphere.rules.encrypt.encryptors.name-encryptor.type=AES
 spring.shardingsphere.rules.encrypt.encryptors.name-encryptor.props.aes-key-value=123456abc
+spring.shardingsphere.rules.encrypt.encryptors.name-assisted-encryptor.type=AES
+spring.shardingsphere.rules.encrypt.encryptors.name-assisted-encryptor.props.aes-key-value=123456abc
+spring.shardingsphere.rules.encrypt.encryptors.name-like-encryptor.type=CHAR_DIGEST_LIKE
+spring.shardingsphere.rules.encrypt.encryptors.name-like-encryptor.props.delta=2
 spring.shardingsphere.rules.encrypt.encryptors.pwd-encryptor.type=AES
-spring.shardingsphere.rules.encrypt.encryptors.pwd-encryptor.props.aes-key-value=123456abc
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.cipher-column=username
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.encryptor-name=name-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.assisted-query-column=username_assisted
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.assisted-query-encryptor-name=name-assisted-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.like-query-column=username_like
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.like-query-encryptor-name=name-like-encryptor
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.cipher-column=pwd
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.encryptor-name=pwd-encryptor
-spring.shardingsphere.props.query-with-cipher-column=true
+spring.shardingsphere.rules.encrypt.tables.t_user.query-with-cipher-column=true
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.query-with-cipher-column=false
 spring.shardingsphere.props.sql-show=true
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/mix.en.md
index 2f9a8e28add..2d052bb836f 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/mix.en.md
@@ -41,11 +41,14 @@ spring.shardingsphere.rules.database-discovery.discovery-heartbeats.<discovery-h
 spring.shardingsphere.rules.database-discovery.discovery-types.<discovery-type-name>.type= # Database discovery type, such as MySQL.MGR.
 spring.shardingsphere.rules.database-discovery.discovery-types.<discovery-type-name>.props.group-name= # Required parameter of database discovery type, such as MGR's group-name.
 # Data desensitization configuration
-spring.shardingsphere.rules.encrypt.tables.<table-name>.query-with-cipher-column= # Whether the table uses ciphercolumn for queries.
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.cipher-column= # Ciphercolumn name
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-column= # Query column name
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.plain-column= # Plaincolumn name
-spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.encryptor-name= # Encryption algorithm name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.query-with-cipher-column= # Whether the table uses cipher columns for query
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.plain-column= # Plain column name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.cipher-column= # Cipher column name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.encryptor-name= # Encrypt algorithm name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-column= # Assisted query column name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.assisted-query-encryptor-name# Assisted query encrypt algorithm name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.like-query-column= # Like query column name
+spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.like-query-encryptor-name# Like query encrypt algorithm name
 # Encryption algorithm configuration
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.type= # Encryption algorithm type
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xxx= # Encryption algorithm property configuration
@@ -81,15 +84,23 @@ spring.shardingsphere.rules.database-discovery.data-sources.readwrite-ds-1.disco
 spring.shardingsphere.rules.database-discovery.discovery-heartbeats.mgr-heartbeat.props.keep-alive-cron=0/5 * * * * ?
 spring.shardingsphere.rules.database-discovery.discovery-types.mgr.type=MGR
 spring.shardingsphere.rules.database-discovery.discovery-types.mgr.props.groupName=b13df29e-90b6-11e8-8d1b-525400fc3996
-# Data decryption
+# Data desensitization configuration
 spring.shardingsphere.rules.encrypt.encryptors.name-encryptor.type=AES
 spring.shardingsphere.rules.encrypt.encryptors.name-encryptor.props.aes-key-value=123456abc
+spring.shardingsphere.rules.encrypt.encryptors.name-assisted-encryptor.type=AES
+spring.shardingsphere.rules.encrypt.encryptors.name-assisted-encryptor.props.aes-key-value=123456abc
+spring.shardingsphere.rules.encrypt.encryptors.name-like-encryptor.type=CHAR_DIGEST_LIKE
+spring.shardingsphere.rules.encrypt.encryptors.name-like-encryptor.props.delta=2
 spring.shardingsphere.rules.encrypt.encryptors.pwd-encryptor.type=AES
-spring.shardingsphere.rules.encrypt.encryptors.pwd-encryptor.props.aes-key-value=123456abc
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.cipher-column=username
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.encryptor-name=name-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.assisted-query-column=username_assisted
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.assisted-query-encryptor-name=name-assisted-encryptor
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.like-query-column=username_like
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.username.like-query-encryptor-name=name-like-encryptor
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.cipher-column=pwd
 spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.encryptor-name=pwd-encryptor
-spring.shardingsphere.props.query-with-cipher-column=true
+spring.shardingsphere.rules.encrypt.tables.t_user.query-with-cipher-column=true
+spring.shardingsphere.rules.encrypt.tables.t_user.columns.pwd.query-with-cipher-column=false
 spring.shardingsphere.props.sql-show=true
 ```

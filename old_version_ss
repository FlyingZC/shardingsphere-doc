commit 315843c665cd44a8a9900682f2f5bbee2d44a70f
Author: Zichao <57847965+Qianyi951015@users.noreply.github.com>
Date:   Fri Nov 4 15:46:39 2022 +1300

    Update DistSql documents (#21939)

diff --git a/docs/document/content/reference/distsql/syntax/ral/export-database-configuration.cn.md b/docs/document/content/reference/distsql/syntax/ral/export-database-configuration.cn.md
new file mode 100644
index 00000000000..0fd8aa17bbc
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/export-database-configuration.cn.md
@@ -0,0 +1,126 @@
++++
+title = "EXPORT DATABASE CONFIGURATION"
+weight = 9
++++
+
+### 描述
+
+`EXPORT DATABASE CONFIGURATION` 语法用于将 `database` 中的存储单元和规则配置导出为 `YAML` 格式
+
+### 语法
+
+```sql
+ExportDatabaseConfiguration ::=
+  'EXPORT' 'DATABASE' 'CONFIGURATION' ('FROM' databaseName)? ('TO' 'FILE' filePath)?
+
+databaseName ::=
+  identifier
+
+filePath ::=
+  string
+```
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE。` 如果也未使用 `DATABASE` 则会提示 `No database selected`。
+
+- 未指定 `filePath` 时，会将存储单元和规则配置导出至屏幕。
+
+### 示例
+
+- 导出指定逻辑库的存储单元和规则配置到指定路径
+
+```sql
+EXPORT DATABASE CONFIGURATION FROM test1 TO FILE "/xxx/config_test1.yaml";
+```
+
+- 导出指定逻辑库的存储单元和规则配置到屏幕
+
+```sql
+EXPORT DATABASE CONFIGURATION FROM test1;
+```
+
+```sql
+mysql> EXPORT DATABASE CONFIGURATION FROM test1;

+| result|

+| databaseName: test1
+dataSources:
+  su_1:
+    password: 123456
+    url: jdbc:mysql://127.0.0.1:3306/migration_ds_0
+    username: root
+    minPoolSize: 1
+    connectionTimeoutMilliseconds: 30000
+    maxLifetimeMilliseconds: 2100000
+    readOnly: false
+    idleTimeoutMilliseconds: 60000
+    maxPoolSize: 50
+  su_2:
+    password: 123456
+    url: jdbc:mysql://127.0.0.1:3306/db1
+    username: root
+    minPoolSize: 1
+    connectionTimeoutMilliseconds: 30000
+    maxLifetimeMilliseconds: 2100000
+    readOnly: false
+    idleTimeoutMilliseconds: 60000
+    maxPoolSize: 50
+rules:
+ |

+1 row in set (0.00 sec)
+```
+
+- 导出当前逻辑库的存储单元和规则配置到指定路径
+
+```sql
+EXPORT DATABASE CONFIGURATION TO FILE "/xxx/config_test1.yaml";
+```
+
+- 导出当前逻辑库的存储单元和规则配置到屏幕
+
+```sql
+EXPORT DATABASE CONFIGURATION;
+```
+
+```sql
+mysql> EXPORT DATABASE CONFIGURATION;

+| result                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |

+| databaseName: test1
+dataSources:
+  su_1:
+    password: 123456
+    url: jdbc:mysql://127.0.0.1:3306/migration_ds_0
+    username: root
+    minPoolSize: 1
+    connectionTimeoutMilliseconds: 30000
+    maxLifetimeMilliseconds: 2100000
+    readOnly: false
+    idleTimeoutMilliseconds: 60000
+    maxPoolSize: 50
+  su_2:
+    password: 123456
+    url: jdbc:mysql://127.0.0.1:3306/db1
+    username: root
+    minPoolSize: 1
+    connectionTimeoutMilliseconds: 30000
+    maxLifetimeMilliseconds: 2100000
+    readOnly: false
+    idleTimeoutMilliseconds: 60000
+    maxPoolSize: 50
+rules:
+ |

+1 row in set (0.00 sec)
+```
+### 保留字
+
+`EXPORT`、`DATABASE`、`CONFIGURATION`、`FROM`、`TO`、`FILE`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/export-database-configuration.en.md b/docs/document/content/reference/distsql/syntax/ral/export-database-configuration.en.md
new file mode 100644
index 00000000000..23bab999f36
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/export-database-configuration.en.md
@@ -0,0 +1,126 @@
++++
+title = "EXPORT DATABASE CONFIGURATION"
+weight = 9
++++
+
+### Description
+
+The `EXPORT DATABASE CONFIGURATION` syntax is used to export storage units and rule configurations to `YAML` format.
+
+### Syntax
+
+```sql
+ExportDatabaseConfiguration ::=
+  'EXPORT' 'DATABASE' 'CONFIGURATION' ('FROM' databaseName)? ('TO' 'FILE' filePath)?
+
+databaseName ::=
+  identifier
+
+filePath ::=
+  string
+```
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+- When `filePath` is not specified, the storage units and rule configurations will export to screen.
+### Example
+
+- Export storage units and rule configurations from specified database to specified file path
+
+```sql
+EXPORT DATABASE CONFIGURATION FROM test1 TO FILE "/xxx/config_test1.yaml";
+```
+
+- Export storage units and rule configurations from specified database to screen
+
+```sql
+EXPORT DATABASE CONFIGURATION FROM test1;
+```
+
+```sql
+mysql> EXPORT DATABASE CONFIGURATION FROM test1;

+| result|

+| databaseName: test1
+dataSources:
+  su_1:
+    password: 123456
+    url: jdbc:mysql://127.0.0.1:3306/migration_ds_0
+    username: root
+    minPoolSize: 1
+    connectionTimeoutMilliseconds: 30000
+    maxLifetimeMilliseconds: 2100000
+    readOnly: false
+    idleTimeoutMilliseconds: 60000
+    maxPoolSize: 50
+  su_2:
+    password: 123456
+    url: jdbc:mysql://127.0.0.1:3306/db1
+    username: root
+    minPoolSize: 1
+    connectionTimeoutMilliseconds: 30000
+    maxLifetimeMilliseconds: 2100000
+    readOnly: false
+    idleTimeoutMilliseconds: 60000
+    maxPoolSize: 50
+rules:
+ |

+1 row in set (0.00 sec)
+```
+
+- Export storage units and rule configurations from current database to specified file path
+
+```sql
+EXPORT DATABASE CONFIGURATION TO FILE "/xxx/config_test1.yaml";
+```
+
+- Export storage units and rule configurations from current database to screen
+
+```sql
+EXPORT DATABASE CONFIGURATION;
+```
+
+```sql
+mysql> EXPORT DATABASE CONFIGURATION;

+| result|

+| databaseName: test1
+dataSources:
+  su_1:
+    password: 123456
+    url: jdbc:mysql://127.0.0.1:3306/migration_ds_0
+    username: root
+    minPoolSize: 1
+    connectionTimeoutMilliseconds: 30000
+    maxLifetimeMilliseconds: 2100000
+    readOnly: false
+    idleTimeoutMilliseconds: 60000
+    maxPoolSize: 50
+  su_2:
+    password: 123456
+    url: jdbc:mysql://127.0.0.1:3306/db1
+    username: root
+    minPoolSize: 1
+    connectionTimeoutMilliseconds: 30000
+    maxLifetimeMilliseconds: 2100000
+    readOnly: false
+    idleTimeoutMilliseconds: 60000
+    maxPoolSize: 50
+rules:
+ |

+1 row in set (0.00 sec)
+```
+
+### Reserved word
+
+`EXPORT`, `DATABASE`, `CONFIGURATION`, `FROM`, `TO`, `FILE`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/ral/import-database-configuration.cn.md b/docs/document/content/reference/distsql/syntax/ral/import-database-configuration.cn.md
new file mode 100644
index 00000000000..1c206487e2d
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/import-database-configuration.cn.md
@@ -0,0 +1,49 @@
++++
+title = "IMPORT DATABASE CONFIGURATION"
+weight = 10
++++
+
+### 描述
+
+`IMPORT DATABASE CONFIGURATION` 语法用于将 `YAML` 中的配置导入到指定逻辑库中
+
+### 语法
+
+```sql
+ExportDatabaseConfiguration ::=
+  'IMPORT' 'DATABASE' 'CONFIGURATION' 'FROM' filePath ('TO' databaseName)?
+
+databaseName ::=
+  identifier
+
+filePath ::=
+  string
+```
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE` 如果也未使用 `DATABASE` 则会提示 `No database selected`。
+
+- `IMPORT DATABASE CONFIGURATION` 语法仅支持对空逻辑库进行导入操作。
+
+### 示例
+
+- 将 `YAML` 中的配置导入到指定逻辑库中
+
+```sql
+IMPORT DATABASE CONFIGURATION FROM "/xxx/config_test1.yaml" TO test1;
+```
+
+- 将 `YAML` 中的配置导入到当前逻辑库中
+
+```sql
+IMPORT DATABASE CONFIGURATION FROM "/xxx/config_test1.yaml";
+```
+
+### 保留字
+
+`IMPORT`、`DATABASE`、`CONFIGURATION`、`FROM`、`TO`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/import-database-configuration.en.md b/docs/document/content/reference/distsql/syntax/ral/import-database-configuration.en.md
new file mode 100644
index 00000000000..91232fac2bb
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/import-database-configuration.en.md
@@ -0,0 +1,49 @@
++++
+title = "IMPORT DATABASE CONFIGURATION"
+weight = 10
++++
+
+### Description
+
+The `IMPORT DATABASE CONFIGURATION` syntax is used to import `YAML` configuration to specified database.
+
+### Syntax
+
+```sql
+ExportDatabaseConfiguration ::=
+  'IMPORT' 'DATABASE' 'CONFIGURATION' 'FROM' filePath ('TO' databaseName)?
+
+databaseName ::=
+  identifier
+
+filePath ::=
+  string
+```
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+- The `IMPORT DATABASE CONFIGURATION` syntax only supports import operations on empty database.
+
+### Example
+
+- Import the configuration in `YAML` into the specified database
+
+```sql
+IMPORT DATABASE CONFIGURATION FROM "/xxx/config_test1.yaml" TO test1;
+```
+
+- Import the configuration in `YAML` into the current database
+
+```sql
+IMPORT DATABASE CONFIGURATION FROM "/xxx/config_test1.yaml";
+```
+
+### Reserved word
+
+`IMPORT`, `DATABASE`, `CONFIGURATION`, `FROM`, `TO`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata-from-storage-unit.cn.md b/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata-from-storage-unit.cn.md
new file mode 100644
index 00000000000..891ec95115a
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata-from-storage-unit.cn.md
@@ -0,0 +1,41 @@
++++
+title = "REFRESH TABLE METADATA FROM STORAGE UNIT"
+weight = 7
++++
+
+### 描述
+
+`REFRESH TABLE METADATA FROM STORAGE UNIT` 语法用于刷新指定存储单元中指定 `SCHEMA` 中表的元数据
+
+### 语法
+
+```sql
+RefreshTableMetadataFromStorageUnit ::=
+  'REFRESH' 'TABLE' 'METADATA' 'FROM' 'STORAGE' 'UNIT' storageUnitName 'SCHEMA' schemaName
+
+storageUnitName ::=
+  identifier
+
+schemaName ::=
+  identifier
+```
+
+### 补充说明
+
+- 如果 `SCHEMA` 中不存在表，则会删除该 `SCHEMA`
+
+### 示例
+
+- 刷新指定存储单元中指定 `SCHEMA` 中表的元数据
+
+```sql
+REFRESH TABLE METADATA FROM STORAGE UNIT su_1 SCHEMA db_schema;
+```
+
+### 保留字
+
+`REFRESH`、`TABLE`、`METADATA`、`FROM`、`STORAGE`、`UNIT`、`SCHEMA`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata-from-storage-unit.en.md b/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata-from-storage-unit.en.md
new file mode 100644
index 00000000000..293d7e584e9
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata-from-storage-unit.en.md
@@ -0,0 +1,41 @@
++++
+title = "REFRESH TABLE METADATA FROM STORAGE UNIT"
+weight = 7
++++
+
+### Description
+
+The `REFRESH TABLE METADATA FROM STORAGE UNIT` syntax is used to Refresh the tables’ metadata in a schema of a specified storage unit.
+
+### Syntax
+
+```sql
+RefreshTableMetadataFromStorageUnit ::=
+  'REFRESH' 'TABLE' 'METADATA' 'FROM' 'STORAGE' 'UNIT' storageUnitName 'SCHEMA' schemaName
+
+storageUnitName ::=
+  identifier
+
+schemaName ::=
+  identifier
+```
+
+### Supplement
+
+- If there are no tables in the schema, the schema will be deleted
+
+### Example
+
+- Refresh the tables’ metadata in a schema of a specified storage unit
+
+```sql
+REFRESH TABLE METADATA FROM STORAGE UNIT su_1 SCHEMA db_schema;
+```
+
+### Reserved word
+
+`REFRESH`, `TABLE`, `METADATA`, `FROM`, `STORAGE`, `UNIT`, `SCHEMA`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata.cn.md b/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata.cn.md
new file mode 100644
index 00000000000..a8ddcf5d531
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata.cn.md
@@ -0,0 +1,55 @@
++++
+title = "REFRESH TABLE METADATA"
+weight = 6
++++
+
+### 描述
+
+`REFRESH TABLE METADATA` 语法用于刷新表元数据
+
+### 语法
+
+```sql
+RefreshTableMetadata ::=
+  'REFRESH' 'TABLE' 'METADATA' ( (tableName)? | tableName 'FROM' 'STORAGE' 'UNIT' storageUnitName)?
+
+tableName ::=
+  identifier
+
+storageUnitName ::=
+  identifier
+```
+
+### 补充说明
+
+- 未指定 `tableName` 和 `storageUnitName` 时，默认刷新所有表的元数据
+
+- 刷新元数据需要使用 `DATABASE` 如果未使用 `DATABASE` 则会提示 `No database selected`
+
+### 示例
+
+- 刷新指定存储单于中指定表的元数据
+
+```sql
+REFRESH TABLE METADATA t_order FROM STORAGE UNIT su_1;
+```
+
+- 刷新指定表的元数据
+
+```sql
+REFRESH TABLE METADATA t_order;
+```
+
+- 刷新所有表的元数据
+
+```sql
+REFRESH TABLE METADATA;
+```
+
+### 保留字
+
+`REFRESH`、`TABLE`、`METADATA`、`FROM`、`STORAGE`、`UNIT`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata.en.md b/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata.en.md
new file mode 100644
index 00000000000..3966ec92cff
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/refresh-table-metadata.en.md
@@ -0,0 +1,54 @@
++++
+title = "REFRESH TABLE METADATA"
+weight = 6
++++
+
+### Description
+
+The `REFRESH TABLE METADATA` syntax is used to refresh table metadata.
+
+### Syntax
+
+```sql
+RefreshTableMetadata ::=
+  'REFRESH' 'TABLE' 'METADATA' ( (tableName)? | tableName 'FROM' 'STORAGE' 'UNIT' storageUnitName)?
+
+tableName ::=
+  identifier
+
+storageUnitName ::=
+  identifier
+```
+
+### Supplement
+
+- When `tableName` and `storageUnitName` is not specified, the default is to refresh all table metadata.
+
+- refresh table metadata need to use `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+### Example
+
+- Refresh metadata for specified table in specified storage unit
+
+```sql
+REFRESH TABLE METADATA t_order FROM STORAGE UNIT su_1;
+```
+
+- Refresh metadata for specified table
+
+```sql
+REFRESH TABLE METADATA t_order;
+```
+- Refresh all table metadata
+
+```sql
+REFRESH TABLE METADATA;
+```
+
+### Reserved word
+
+`REFRESH`, `TABLE`, `METADATA`, `FROM`, `STORAGE`, `UNIT`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/ral/set-dist-vairable.cn.md b/docs/document/content/reference/distsql/syntax/ral/set-dist-vairable.cn.md
new file mode 100644
index 00000000000..480b794ddab
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/set-dist-vairable.cn.md
@@ -0,0 +1,63 @@
++++
+title = "SET DIST VARIABLE"
+weight = 4
++++
+
+### 描述
+
+`SET DIST VARIABLE` 语法用于设置系统变量
+
+### 语法
+
+```sql
+SetDistVariable ::=
+  'SET' 'DIST' 'VARIABLE' ( proxyPropertyName '=' proxyPropertyValue | 'transaction_type' '=' transactionType | 'agent_plugins_enable' '=' agentPluginsEnable )
+
+proxyPropertyName ::= 
+  identifier
+
+proxyPropertyValue ::=
+  literal
+
+transactionType ::=
+  string
+
+agentPluginsEnable ::=
+  boolean
+```
+
+### 补充说明
+
+- `proxy_property_name` 为 `PROXY` 的[属性配置](/cn/user-manual/shardingsphere-proxy/yaml-config/props/)，需使用下划线命名
+
+- `transaction_type` 为当前连接的事务类型, 支持 `LOCAL`、`XA`、`BASE`
+
+- `agent_plugins_enable` 为 `agent` 插件的启用状态，默认值 `FALSE`
+
+### 示例
+
+- 设置 `Proxy` 属性配置
+
+```sql
+SET DIST VARIABLE sql_show = true;
+```
+
+- 设置当前连接的事务类型
+
+```sql
+SET DIST VARIABLE transaction_type = “XA”;
+```
+
+- 设置 `agent` 插件启用状态
+
+```sql
+SET DIST VARIABLE agent_plugins_enabled = TRUE;
+```
+
+### 保留字
+
+`SET`、`DIST`、`VARIABLE`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/set-dist-vairable.en.md b/docs/document/content/reference/distsql/syntax/ral/set-dist-vairable.en.md
new file mode 100644
index 00000000000..9184368f1b0
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/set-dist-vairable.en.md
@@ -0,0 +1,62 @@
++++
+title = "SET DIST VARIABLE"
+weight = 4
++++
+
+### Description
+
+The `SET DIST VARIABLE` syntax is used to set system variables.
+### Syntax
+
+```sql
+SetDistVariable ::=
+  'SET' 'DIST' 'VARIABLE' ( proxyPropertyName '=' proxyPropertyValue | 'transaction_type' '=' transactionType | 'agent_plugins_enable' '=' agentPluginsEnable )
+
+proxyPropertyName ::= 
+  identifier
+
+proxyPropertyValue ::=
+  literal
+
+transactionType ::=
+  string
+
+agentPluginsEnable ::=
+  boolean
+```
+
+### Supplement
+
+-  `proxy_property_name` is one of [properties configuration](/en/user-manual/shardingsphere-proxy/yaml-config/props/) of `PROXY`, name is split by underscore
+
+- `transaction_type` is use to set transaction types for current connection, supports `LOCAL`, `XA`, `BASE`
+
+- `agent_plugins_enable` is use to set the `agent` plugins enable status, the default value is `FALSE`
+
+### Example
+
+- Set property configuration of `Proxy`
+
+```sql
+SET DIST VARIABLE sql_show = true;
+```
+
+- Set transaction type for current connection
+
+```sql
+SET DIST VARIABLE transaction_type = “XA”;
+```
+
+- Set `agent` plugin enable status
+
+```sql
+SET DIST VARIABLE agent_plugins_enabled = TRUE;
+```
+
+### Reserved word
+
+`SET`, `DIST`, `VARIABLE`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-compute-node-info.cn.md b/docs/document/content/reference/distsql/syntax/ral/show-compute-node-info.cn.md
new file mode 100644
index 00000000000..b8fccef44d4
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-compute-node-info.cn.md
@@ -0,0 +1,53 @@
++++
+title = "SHOW COMPUTE NODE INFO"
+weight = 2
++++
+
+### 描述
+
+`SHOW COMPUTE NODE INFO` 语法用于查询当前 proxy 实例信息
+
+### 语法
+
+```sql
+ShowComputeNodeInfo ::=
+  'SHOW' 'COMPUTE' 'NODE' 'INFO'
+```
+
+### 返回值说明
+
+| 列             | 说明               |
+|----------------|-------------------|
+| instance_id    | proxy 实例编号     |
+| host           | 主机地址           |
+| port           | 端口号             |
+| status         | proxy 实例状态     |
+| mode_type      | proxy 实例模式     |
+| worker_id      | worker id         |
+| labels         | 标签               |
+
+### 示例
+
+- 查询当前 proxy 实例信息
+
+```sql
+SHOW COMPUTE NODE INFO;
+```
+
+```sql
+mysql> SHOW COMPUTE NODE INFO;
++--------------------------------------+---------------+------+--------+-----------+-----------+--------+
+| instance_id                          | host          | port | status | mode_type | worker_id | labels |
++--------------------------------------+---------------+------+--------+-----------+-----------+--------+
+| 734bb036-b15d-4af0-be87-2372d8b6a0cd | 192.168.5.163 | 3307 | OK     | Cluster   | -1        |        |
++--------------------------------------+---------------+------+--------+-----------+-----------+--------+
+1 row in set (0.01 sec)
+```
+
+### 保留字
+
+`SHOW`、`COMPUTE`、`NODE`、`INFO`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-compute-node-info.en.md b/docs/document/content/reference/distsql/syntax/ral/show-compute-node-info.en.md
new file mode 100644
index 00000000000..feeaceb790d
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-compute-node-info.en.md
@@ -0,0 +1,52 @@
++++
+title = "SHOW COMPUTE NODE INFO"
+weight = 2
++++
+
+### Description
+
+The `SHOW COMPUTE NODE INFO` syntax is used to query current proxy instance information.
+### Syntax
+
+```sql
+ShowComputeNodeInfo ::=
+  'SHOW' 'COMPUTE' 'NODE' 'INFO'
+```
+
+### Return Value Description
+
+| Columns        | Description           |
+|----------------|-----------------------|
+| instance_id    | proxy instance id     |
+| host           | host address          |
+| port           | port number           |
+| status         | proxy instance status |
+| mode_type      | proxy instance mode   |
+| worker_id      | worker id             |
+| labels         | labels                |
+
+### Example
+
+- Query current proxy instance information
+
+```sql
+SHOW COMPUTE NODE INFO;
+```
+
+```sql
+mysql> SHOW COMPUTE NODE INFO;
++--------------------------------------+---------------+------+--------+-----------+-----------+--------+
+| instance_id                          | host          | port | status | mode_type | worker_id | labels |
++--------------------------------------+---------------+------+--------+-----------+-----------+--------+
+| 734bb036-b15d-4af0-be87-2372d8b6a0cd | 192.168.5.163 | 3307 | OK     | Cluster   | -1        |        |
++--------------------------------------+---------------+------+--------+-----------+-----------+--------+
+1 row in set (0.01 sec)
+```
+
+### Reserved word
+
+`SHOW`, `COMPUTE`, `NODE`, `INFO`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-compute-node-mode.cn.md b/docs/document/content/reference/distsql/syntax/ral/show-compute-node-mode.cn.md
new file mode 100644
index 00000000000..8f4f79e9e72
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-compute-node-mode.cn.md
@@ -0,0 +1,49 @@
++++
+title = "SHOW COMPUTE NODE MODE"
+weight = 3
++++
+
+### 描述
+
+`SHOW COMPUTE NODE MODE` 语法用于查询当前 proxy 的模式配置信息
+
+### 语法
+
+```sql
+ShowComputeNodeMode ::=
+  'SHOW' 'COMPUTE' 'NODE' 'MODE'
+```
+
+### 返回值说明
+
+| 列           | 说明                     |
+|--------------|-------------------------|
+| type         | proxy 模式类型           |
+| repository   | proxy 持久化仓库类型      |
+| props        | proxy 持久化仓库属性参数  |
+
+### 示例
+
+- 查询当前 proxy 实例模式配置信息
+
+```sql
+SHOW COMPUTE NODE MODE;
+```
+
+```sql
+mysql> SHOW COMPUTE NODE MODE;
++---------+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
+| type    | repository | props                                                                                                                                                                  |
++---------+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
+| Cluster | ZooKeeper  | {"operationTimeoutMilliseconds":500,"timeToLiveSeconds":60,"maxRetries":3,"namespace":"governance_ds","server-lists":"localhost:2181","retryIntervalMilliseconds":500} |
++---------+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
+1 row in set (0.00 sec)
+```
+
+### 保留字
+
+`SHOW`、`COMPUTE`、`NODE`、`MODE`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-compute-node-mode.en.md b/docs/document/content/reference/distsql/syntax/ral/show-compute-node-mode.en.md
new file mode 100644
index 00000000000..b52175daaf1
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-compute-node-mode.en.md
@@ -0,0 +1,49 @@
++++
+title = "SHOW COMPUTE NODE MODE"
+weight = 3
++++
+
+### Description
+
+The `SHOW COMPUTE NODE MODE` syntax is used to query current proxy instance mode configuration information.
+### Syntax
+
+```sql
+ShowComputeNodeInfo ::=
+  'SHOW' 'COMPUTE' 'NODE' 'MODE'
+```
+
+### Return Value Description
+
+| Columns      | Description                        |
+|--------------|------------------------------------|
+| type         | type of proxy mode configuration   |
+| repository   | type of persist repository         |
+| props        | properties of persist repository   |
+
+### Example
+
+- Query current proxy instance mode configuration information
+
+```sql
+SHOW COMPUTE NODE MODE;
+```
+
+```sql
+mysql> SHOW COMPUTE NODE MODE;
++---------+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
+| type    | repository | props                                                                                                                                                                  |
++---------+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
+| Cluster | ZooKeeper  | {"operationTimeoutMilliseconds":500,"timeToLiveSeconds":60,"maxRetries":3,"namespace":"governance_ds","server-lists":"localhost:2181","retryIntervalMilliseconds":500} |
++---------+------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
+1 row in set (0.00 sec)
+
+```
+
+### Reserved word
+
+`SHOW`, `COMPUTE`, `NODE`, `MODE`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-dist-variable.cn.md b/docs/document/content/reference/distsql/syntax/ral/show-dist-variable.cn.md
new file mode 100644
index 00000000000..f7fdc04671b
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-dist-variable.cn.md
@@ -0,0 +1,92 @@
++++
+title = "SHOW DIST VARIABLE"
+weight = 5
++++
+
+### 描述
+
+`SHOW DIST VARIABLE` 语法用于查询 `PROXY` 系统变量配置
+
+### 语法
+
+```sql
+ShowDistVariable ::=
+  'SHOW' ('VARIABLES'|'VARIABLE' 'NAME' '=' variableName)
+
+variableName ::=
+  identifier
+```
+
+### 返回值说明
+
+| 列            | 说明        |
+|---------------|------------|
+| variable_name | 系统变量名称|
+| variable_value| 系统变量值  |
+
+### 补充说明
+
+- 未指定 `vairableName` 时，默认查询所有 `PROXY` 系统变量配置
+
+### 示例
+
+- 查询所有 `PROXY` 系统变量配置
+
+```sql
+SHOW DIST VARIABLES;
+```
+
+```sql
+mysql> SHOW DIST VARIABLES;
++---------------------------------------+----------------+
+| variable_name                         | variable_value |
++---------------------------------------+----------------+
+| sql_show                              | false          |
+| sql_simple                            | false          |
+| kernel_executor_size                  | 0              |
+| max_connections_size_per_query        | 1              |
+| check_table_metadata_enabled          | false          |
+| sql_federation_type                   | NONE           |
+| proxy_frontend_database_protocol_type |                |
+| proxy_frontend_flush_threshold        | 128            |
+| proxy_hint_enabled                    | false          |
+| proxy_backend_query_fetch_size        | -1             |
+| proxy_frontend_executor_size          | 0              |
+| proxy_backend_executor_suitable       | OLAP           |
+| proxy_frontend_max_connections        | 0              |
+| proxy_backend_driver_type             | JDBC           |
+| proxy_mysql_default_version           | 5.7.22         |
+| proxy_default_port                    | 3307           |
+| proxy_netty_backlog                   | 1024           |
+| proxy_instance_type                   | Proxy          |
+| proxy_metadata_collector_enabled      | false          |
+| agent_plugins_enabled                 | true           |
+| cached_connections                    | 0              |
+| transaction_type                      | LOCAL          |
++---------------------------------------+----------------+
+22 rows in set (0.01 sec)
+```
+
+- 查询指定 `PROXY` 系统变量配置
+
+```sql
+SHOW DIST VARIABLE WHERE NAME = sql_show;
+```
+
+```sql
+mysql> SHOW DIST VARIABLE WHERE NAME = sql_show;
++---------------+----------------+
+| variable_name | variable_value |
++---------------+----------------+
+| sql_show      | false          |
++---------------+----------------+
+1 row in set (0.00 sec)
+```
+
+### 保留字
+
+`SHOW`、`DIST`、`VARIABLE`、`VARIABLES`、`NAME`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-dist-variable.en.md b/docs/document/content/reference/distsql/syntax/ral/show-dist-variable.en.md
new file mode 100644
index 00000000000..5b60ee3542d
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-dist-variable.en.md
@@ -0,0 +1,91 @@
++++
+title = "SHOW DIST VARIABLE"
+weight = 5
++++
+
+### Description
+
+The `SHOW DIST VARIABLE` syntax is used to query `PROXY` system variables configuration.
+
+### Syntax
+
+```sql
+ShowDistVariable ::=
+  'SHOW' ('VARIABLES'|'VARIABLE' 'WHERE' 'NAME' '=' variableName)
+
+variableName ::=
+  identifier
+```
+
+### Return Value Description
+
+| Columns       | Description            |
+|---------------|------------------------|
+| variable_name | system variable name   |
+| variable_value| systen variable value  |
+
+### Supplement
+
+- When `variableName` is not specified, the default is query all `PROXY` variables configuration.
+
+### Example
+
+- Query all system variables configuration of `PROXY`
+
+```sql
+SHOW DIST VARIABLES;
+```
+
+```sql
+mysql> SHOW DIST VARIABLES;
++---------------------------------------+----------------+
+| variable_name                         | variable_value |
++---------------------------------------+----------------+
+| sql_show                              | false          |
+| sql_simple                            | false          |
+| kernel_executor_size                  | 0              |
+| max_connections_size_per_query        | 1              |
+| check_table_metadata_enabled          | false          |
+| sql_federation_type                   | NONE           |
+| proxy_frontend_database_protocol_type |                |
+| proxy_frontend_flush_threshold        | 128            |
+| proxy_hint_enabled                    | false          |
+| proxy_backend_query_fetch_size        | -1             |
+| proxy_frontend_executor_size          | 0              |
+| proxy_backend_executor_suitable       | OLAP           |
+| proxy_frontend_max_connections        | 0              |
+| proxy_backend_driver_type             | JDBC           |
+| proxy_mysql_default_version           | 5.7.22         |
+| proxy_default_port                    | 3307           |
+| proxy_netty_backlog                   | 1024           |
+| proxy_instance_type                   | Proxy          |
+| proxy_metadata_collector_enabled      | false          |
+| agent_plugins_enabled                 | true           |
+| cached_connections                    | 0              |
+| transaction_type                      | LOCAL          |
++---------------------------------------+----------------+
+22 rows in set (0.01 sec)
+```
+- Query specified system variable configuration of `PROXY`
+
+```sql
+SHOW DIST VARIABLE WHERE NAME = sql_show;
+```
+
+```sql
+mysql> SHOW DIST VARIABLE WHERE NAME = sql_show;
++---------------+----------------+
+| variable_name | variable_value |
++---------------+----------------+
+| sql_show      | false          |
++---------------+----------------+
+1 row in set (0.00 sec)
+```
+
+### Reserved word
+
+`SHOW`, `DIST`, `VARIABLE`, `VARIABLES`, `NAME`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-rules-used-storage-unit.cn.md b/docs/document/content/reference/distsql/syntax/ral/show-rules-used-storage-unit.cn.md
new file mode 100644
index 00000000000..d04853bd704
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-rules-used-storage-unit.cn.md
@@ -0,0 +1,76 @@
++++
+title = "SHOW RULES USED STORAGE UNIT"
+weight = 11
++++
+
+### 描述
+
+`SHOW RULES USED STORAGE UNIT` 语法用于查询指定逻辑库中使用指定存储单元的规则
+
+### 语法
+
+```sql
+ShowRulesUsedStorageUnit ::=
+  'SHOW' 'RULES' 'USED' 'STORAGE' 'UNIT' storageUnitName ('FROM' databaseName)?
+
+storageUnitName ::=
+  identifier
+
+databaseName ::=
+  identifier
+```
+
+### 返回值说明
+
+| 列          | 说明       |
+|-------------|-----------|
+| type        | 规则类型   |
+| name        | 规则名称   |
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE。` 如果也未使用 `DATABASE` 则会提示 `No database selected`。
+
+### 示例
+
+- 查询指定逻辑库中使用指定存储单元的规则
+
+```sql
+SHOW RULES USED STORAGE UNIT su_1 FROM test1;
+```
+
+```sql
+mysql> SHOW RULES USED STORAGE UNIT su_1 FROM test1;
++---------------------+------------+
+| type                | name       |
++---------------------+------------+
+| readwrite_splitting | ms_group_0 |
+| readwrite_splitting | ms_group_0 |
++---------------------+------------+
+2 rows in set (0.01 sec)
+```
+
+- 查询当前逻辑库中使用指定存储单元的规则
+
+```sql
+SHOW RULES USED STORAGE UNIT su_1;
+```
+
+```sql
+mysql> SHOW RULES USED STORAGE UNIT su_1;
++---------------------+------------+
+| type                | name       |
++---------------------+------------+
+| readwrite_splitting | ms_group_0 |
+| readwrite_splitting | ms_group_0 |
++---------------------+------------+
+2 rows in set (0.01 sec)
+```
+
+### 保留字
+
+`SHOW`、`RULES`、`USED`、`STORAGE`、`UNIT`、`FROM`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-rules-used-storage-unit.en.md b/docs/document/content/reference/distsql/syntax/ral/show-rules-used-storage-unit.en.md
new file mode 100644
index 00000000000..70448d47c65
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-rules-used-storage-unit.en.md
@@ -0,0 +1,76 @@
++++
+title = "SHOW RULES USED STORAGE UNIT"
+weight = 11
++++
+
+### Description
+
+The `SHOW RULES USED STORAGE UNIT` syntax is used to query the rules for using the specified storage unit in specified database.
+
+### Syntax
+
+```sql
+ShowRulesUsedStorageUnit ::=
+  'SHOW' 'RULES' 'USED' 'STORAGE' 'UNIT' storageUnitName ('FROM' databaseName)?
+
+storageUnitName ::=
+  identifier
+
+databaseName ::=
+  identifier
+```
+
+### Return Value Description
+
+| Columns     | Description   |
+|-------------|---------------|
+| type        | rule type     |
+| name        | rule name     |
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+### Example
+
+- Query the rules for using the specified storage unit in specified database
+
+```sql
+SHOW RULES USED STORAGE UNIT su_1 FROM test1;
+```
+
+```sql
+mysql> SHOW RULES USED STORAGE UNIT su_1 FROM test1;
++---------------------+------------+
+| type                | name       |
++---------------------+------------+
+| readwrite_splitting | ms_group_0 |
+| readwrite_splitting | ms_group_0 |
++---------------------+------------+
+2 rows in set (0.01 sec)
+```
+
+- Query the rules for using the specified storage unit in current database
+
+```sql
+SHOW RULES USED STORAGE UNIT su_1;
+```
+
+```sql
+mysql> SHOW RULES USED STORAGE UNIT su_1;
++---------------------+------------+
+| type                | name       |
++---------------------+------------+
+| readwrite_splitting | ms_group_0 |
+| readwrite_splitting | ms_group_0 |
++---------------------+------------+
+2 rows in set (0.01 sec)
+```
+
+### Reserved word
+
+`SHOW`, `RULES`, `USED`, `STORAGE`, `UNIT`, `FROM`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-table-metadata.cn.md b/docs/document/content/reference/distsql/syntax/ral/show-table-metadata.cn.md
new file mode 100644
index 00000000000..88157cf1c51
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-table-metadata.cn.md
@@ -0,0 +1,128 @@
++++
+title = "SHOW TABLE METADATA"
+weight = 8
++++
+
+### 描述
+
+`SHOW TABLE METADATA` 语法用于查询表的元数据
+
+### 语法
+
+```sql
+ShowTableMetadata ::=
+  'SHOW' 'TABLE' 'METADATA' tableName (',' tableName)* ('FROM' databaseName)?
+
+tableName ::=
+  identifier
+
+databaseName ::=
+  identifier
+```
+
+### 返回值说明
+
+| 列          | 说明       |
+|-------------|-----------|
+| schema_name | 逻辑库名称 |
+| table_name  | 表名称    |
+| type        | 元数据类型 |
+| name        | 元数据名称 |
+
+### 补充说明
+
+- 未指定 `databaseName` 时，默认是当前使用的 `DATABASE。` 如果也未使用 `DATABASE` 则会提示 `No database selected`。
+
+### 示例
+
+- 查询指定逻辑库中多个表的元数据
+
+```sql
+SHOW TABLE METADATA t_order, t_order_1 FROM test1;
+```
+
+```sql
+mysql> SHOW TABLE METADATA t_order, t_order_1 FROM test1;
++-------------+------------+--------+----------+
+| schema_name | table_name | type   | name     |
++-------------+------------+--------+----------+
+| test1       | t_order_1  | COLUMN | order_id |
+| test1       | t_order_1  | COLUMN | user_id  |
+| test1       | t_order_1  | COLUMN | status   |
+| test1       | t_order_1  | INDEX  | PRIMARY  |
+| test1       | t_order    | COLUMN | order_id |
+| test1       | t_order    | COLUMN | user_id  |
+| test1       | t_order    | COLUMN | status   |
+| test1       | t_order    | INDEX  | PRIMARY  |
++-------------+------------+--------+----------+
+8 rows in set (0.01 sec)
+```
+
+- 查询指定逻辑库中单个表的元数据
+
+```sql
+SHOW TABLE METADATA t_order FROM test1;
+```
+
+```sql
+mysql> SHOW TABLE METADATA t_order FROM test1;
++-------------+------------+--------+----------+
+| schema_name | table_name | type   | name     |
++-------------+------------+--------+----------+
+| test1       | t_order    | COLUMN | order_id |
+| test1       | t_order    | COLUMN | user_id  |
+| test1       | t_order    | COLUMN | status   |
+| test1       | t_order    | INDEX  | PRIMARY  |
++-------------+------------+--------+----------+
+4 rows in set (0.00 sec)
+```
+
+- 查询当前逻辑库中多个表的元数据
+
+```sql
+SHOW TABLE METADATA t_order, t_order_1;
+```
+
+```sql
+mysql> SHOW TABLE METADATA t_order, t_order_1;
++-------------+------------+--------+----------+
+| schema_name | table_name | type   | name     |
++-------------+------------+--------+----------+
+| test1       | t_order_1  | COLUMN | order_id |
+| test1       | t_order_1  | COLUMN | user_id  |
+| test1       | t_order_1  | COLUMN | status   |
+| test1       | t_order_1  | INDEX  | PRIMARY  |
+| test1       | t_order    | COLUMN | order_id |
+| test1       | t_order    | COLUMN | user_id  |
+| test1       | t_order    | COLUMN | status   |
+| test1       | t_order    | INDEX  | PRIMARY  |
++-------------+------------+--------+----------+
+8 rows in set (0.00 sec)
+```
+
+- 查询当前逻辑库中单个表的元数据
+
+```sql
+SHOW TABLE METADATA t_order;
+```
+
+```sql
+mysql> SHOW TABLE METADATA t_order;
++-------------+------------+--------+----------+
+| schema_name | table_name | type   | name     |
++-------------+------------+--------+----------+
+| test1       | t_order    | COLUMN | order_id |
+| test1       | t_order    | COLUMN | user_id  |
+| test1       | t_order    | COLUMN | status   |
+| test1       | t_order    | INDEX  | PRIMARY  |
++-------------+------------+--------+----------+
+4 rows in set (0.01 sec)
+```
+
+### 保留字
+
+`SHOW`、`TABLE`、`METADATA`、`FROM`
+
+### 相关链接
+
+- [保留字](/cn/reference/distsql/syntax/reserved-word/)
\ No newline at end of file
diff --git a/docs/document/content/reference/distsql/syntax/ral/show-table-metadata.en.md b/docs/document/content/reference/distsql/syntax/ral/show-table-metadata.en.md
new file mode 100644
index 00000000000..b189966dc11
--- /dev/null
+++ b/docs/document/content/reference/distsql/syntax/ral/show-table-metadata.en.md
@@ -0,0 +1,128 @@
++++
+title = "SHOW TABLE METADATA"
+weight = 8
++++
+
+### Description
+
+The `SHOW TABLE METADATA` syntax is used to query tabe metadata.
+
+### Syntax
+
+```sql
+ShowTableMetadata ::=
+  'SHOW' 'TABLE' 'METADATA' tableName (',' tableName)* ('FROM' databaseName)?
+
+tableName ::=
+  identifier
+
+databaseName ::=
+  identifier
+```
+
+### Return Value Description
+
+| Columns     | Description   |
+|-------------|---------------|
+| schema_name | database name |
+| table_name  | table name    |
+| type        | metadata type |
+| name        | metadata name |
+
+### Supplement
+
+- When `databaseName` is not specified, the default is the currently used `DATABASE`. If `DATABASE` is not used, `No database selected` will be prompted.
+
+### Example
+
+- Query matadata of multiple tables from specified database
+
+```sql
+SHOW TABLE METADATA t_order, t_order_1 FROM test1;
+```
+
+```sql
+mysql> SHOW TABLE METADATA t_order, t_order_1 FROM test1;
++-------------+------------+--------+----------+
+| schema_name | table_name | type   | name     |
++-------------+------------+--------+----------+
+| test1       | t_order_1  | COLUMN | order_id |
+| test1       | t_order_1  | COLUMN | user_id  |
+| test1       | t_order_1  | COLUMN | status   |
+| test1       | t_order_1  | INDEX  | PRIMARY  |
+| test1       | t_order    | COLUMN | order_id |
+| test1       | t_order    | COLUMN | user_id  |
+| test1       | t_order    | COLUMN | status   |
+| test1       | t_order    | INDEX  | PRIMARY  |
++-------------+------------+--------+----------+
+8 rows in set (0.01 sec)
+```
+
+- Query metadata of one table from specified database
+
+```sql
+SHOW TABLE METADATA t_order FROM test1;
+```
+
+```sql
+mysql> SHOW TABLE METADATA t_order FROM test1;
++-------------+------------+--------+----------+
+| schema_name | table_name | type   | name     |
++-------------+------------+--------+----------+
+| test1       | t_order    | COLUMN | order_id |
+| test1       | t_order    | COLUMN | user_id  |
+| test1       | t_order    | COLUMN | status   |
+| test1       | t_order    | INDEX  | PRIMARY  |
++-------------+------------+--------+----------+
+4 rows in set (0.00 sec)
+```
+
+- Query metadata of multiple tables from current database
+
+```sql
+SHOW TABLE METADATA t_order, t_order_1;
+```
+
+```sql
+mysql> SHOW TABLE METADATA t_order, t_order_1;
++-------------+------------+--------+----------+
+| schema_name | table_name | type   | name     |
++-------------+------------+--------+----------+
+| test1       | t_order_1  | COLUMN | order_id |
+| test1       | t_order_1  | COLUMN | user_id  |
+| test1       | t_order_1  | COLUMN | status   |
+| test1       | t_order_1  | INDEX  | PRIMARY  |
+| test1       | t_order    | COLUMN | order_id |
+| test1       | t_order    | COLUMN | user_id  |
+| test1       | t_order    | COLUMN | status   |
+| test1       | t_order    | INDEX  | PRIMARY  |
++-------------+------------+--------+----------+
+8 rows in set (0.00 sec)
+```
+
+- Query metadata of one table from current database
+
+```sql
+SHOW TABLE METADATA t_order;
+```
+
+```sql
+mysql> SHOW TABLE METADATA t_order;
++-------------+------------+--------+----------+
+| schema_name | table_name | type   | name     |
++-------------+------------+--------+----------+
+| test1       | t_order    | COLUMN | order_id |
+| test1       | t_order    | COLUMN | user_id  |
+| test1       | t_order    | COLUMN | status   |
+| test1       | t_order    | INDEX  | PRIMARY  |
++-------------+------------+--------+----------+
+4 rows in set (0.01 sec)
+```
+
+### Reserved word
+
+`SHOW`, `TABLE`, `METADATA`, `FROM`
+
+### Related links
+
+- [Reserved word](/en/reference/distsql/syntax/reserved-word/)

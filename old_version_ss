commit 9c038911bf4adde18628e34862c36c36a0719bce
Author: Mike0601 <40025573+Mike0601@users.noreply.github.com>
Date:   Wed Oct 12 10:43:24 2022 +0800

    add session management (#21515)
    
    * add session management
    
    * update chapter No.

diff --git a/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.cn.md
index 0ed771f1bf4..8c7d989bd89 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.cn.md
@@ -1,6 +1,6 @@
 +++
 title = "可选插件"
-weight = 5
+weight = 6
 +++
 
 ShardingSphere 默认情况下仅包含核心 SPI 的实现，在 Git Source 存在一部分包含第三方依赖的 SPI
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.en.md b/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.en.md
index 213ca072415..9bc4df04a59 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.en.md
@@ -1,6 +1,6 @@
 +++
 title = "Optional Plugins"
-weight = 5
+weight = 6
 +++
 
 ShardingSphere only includes the implementation of the core SPI by default, and there is a part of the SPI that contains
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/session/_index.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/session/_index.cn.md
new file mode 100644
index 00000000000..0bf6179ad48
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-proxy/session/_index.cn.md
@@ -0,0 +1,38 @@
++++
+title = "会话管理"
+weight = 7
++++
+
+ShardingSphere 支持会话管理，可通过原生数据库的 SQL 查看当前会话或杀掉会话。目前此功能仅限于存储节点为 MySQL 的情况，支持 MySQL `SHOW PROCESSLIST` 命令和 `KILL` 命令。
+
+## 相关操作
+
+### 查看会话
+
+针对不同关联数据库支持不同的查看会话方法，关联 MySQL 数据库可使用 `SHOW PROCESSLIST` 命令查看会话。ShardingSphere 会自动生成唯一的 UUID 标识作为 ID，并将 SQL 执行信息存储在各个实例中。当执行此命令时，ShardingSphere 会通过治理中心收集并同步各个计算节点的 SQL 执行信息，然后汇总返回给用户。
+
+```sql
+mysql> show processlist;
++----------------------------------+------+-----------+-------------+---------+------+---------------+------------------+
+| Id                               | User | Host      | db          | Command | Time | State         | Info             |
++----------------------------------+------+-----------+-------------+---------+------+---------------+------------------+
+| 05ede3bd584fd4a429dcaac382be2973 | root | 127.0.0.1 | sharding_db | Execute | 2    | Executing 0/1 | select sleep(10) |
+| f9e5c97431567415fe10badc5fa46378 | root | 127.0.0.1 | sharding_db | Sleep   | 690  |               |                  |
++----------------------------------+------+-----------+-------------+---------+------+---------------+------------------+
+```
+
+- 输出说明
+
+模拟原生 MySQL 的输出，但 `Id` 字段较为特殊为随机字符串。
+
+### 杀掉会话
+
+用户根据 `SHOW PROCESSLIST` 返回的结果，判断是否需要执行 `KILL` 语句，ShardingSphere 会根据 `KILL` 语句中的 ID 取消正在执行中的 SQL。
+
+```sql
+mysql> kill 05ede3bd584fd4a429dcaac382be2973;
+Query OK, 0 rows affected (0.04 sec)
+
+mysql> show processlist;
+Empty set (0.02 sec)
+```
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/session/_index.en.md b/docs/document/content/user-manual/shardingsphere-proxy/session/_index.en.md
new file mode 100644
index 00000000000..c72a552d619
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-proxy/session/_index.en.md
@@ -0,0 +1,37 @@
++++
+title = "Session Management"
+weight = 7
++++
+
+ShardingSphere supports session management. You can view the current session or kill the session through the SQL of the native database. At present, this function is only available when the storage node is MySQL. MySQL `SHOW PROCESSLIST` and `KILL` commands are supported.
+
+## Usage
+### View Session
+
+Different methods of viewing sessions are supported for different associated databases. The `SHOW PROCESSLIST` command can be used to view sessions for associated MySQL databases. ShardingSphere will automatically generate a unique UUID ID as the ID, and store the SQL execution information in each instance. When this command is executed, ShardingSphere will collect and synchronize the SQL execution information of each computing node through the governance center, and then summarize and return it to the user.
+
+```sql
+mysql> show processlist;
++----------------------------------+------+-----------+-------------+---------+------+---------------+------------------+
+| Id                               | User | Host      | db          | Command | Time | State         | Info             |
++----------------------------------+------+-----------+-------------+---------+------+---------------+------------------+
+| 05ede3bd584fd4a429dcaac382be2973 | root | 127.0.0.1 | sharding_db | Execute | 2    | Executing 0/1 | select sleep(10) |
+| f9e5c97431567415fe10badc5fa46378 | root | 127.0.0.1 | sharding_db | Sleep   | 690  |               |                  |
++----------------------------------+------+-----------+-------------+---------+------+---------------+------------------+
+```
+
+- Output Description
+
+Simulates the output of native MySQL, but the `Id` field is a special random string.
+
+### Kill Session
+
+The user determines whether the `KILL` statement needs to be executed according to the results returned by `SHOW PROCESSLIST`. ShardingSphere cancels the SQL being executed according to the ID in the `KILL` statement.
+
+```sql
+mysql> kill 05ede3bd584fd4a429dcaac382be2973;
+Query OK, 0 rows affected (0.04 sec)
+
+mysql> show processlist;
+Empty set (0.02 sec)
+```

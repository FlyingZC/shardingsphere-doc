commit c4781e1dfbaa85a391beff42c1186554762cc201
Author: Chen Jiahao <37339007+Pace2Car@users.noreply.github.com>
Date:   Tue Dec 27 18:59:09 2022 +0800

    Update document (#23121)
    
    * Fix JDBC example link
    
    * Remove Navicat in FAQ
    
    * Replace resource with storage unit
    
    * Update storage unit related document
    
    * Fix incorrect word
    
    * Rename WorkBench to MySQLWorkBench

diff --git a/docs/document/content/faq/_index.cn.md b/docs/document/content/faq/_index.cn.md
index 1b24dfca5a4..7c241ea824b 100644
--- a/docs/document/content/faq/_index.cn.md
+++ b/docs/document/content/faq/_index.cn.md
@@ -70,16 +70,15 @@ DROP DATABASE sharding_db;
 1. ShardingSphere-Proxy 可以看做是一个 database server，所以首选支持 SQL 命令连接和操作。
 2. 如果使用其他第三方数据库工具，可能由于不同工具的特定实现导致出现异常。
 3. 目前已测试的第三方数据库工具如下：
-   - Navicat：11.1.13、15.0.20。
    - DataGrip：2020.1、2021.1（使用 IDEA/DataGrip 时打开 `introspect using JDBC metadata` 选项）。
-   - WorkBench：8.0.25。
+   - MySQLWorkBench：8.0.25。
 
-### [Proxy] 使用 Navicat 等第三方数据库工具连接 ShardingSphere-Proxy 时，如果 ShardingSphere-Proxy 没有创建 Database 或者没有添加 Storage Unit，连接失败？
+### [Proxy] 使用第三方数据库工具连接 ShardingSphere-Proxy 时，如果 ShardingSphere-Proxy 没有创建 Database 或者没有注册 Storage Unit，连接失败？
 
 回答：
 
-1. 第三方数据库工具在连接 ShardingSphere-Proxy 时会发送一些 SQL 查询元数据，当 ShardingSphere-Proxy 没有创建 `database` 或者没有添加 `storage unit` 时，ShardingSphere-Proxy 无法执行 SQL。
-2. 推荐先创建 `database` 和 `storage unit` 之后再使用第三方数据库工具连接。
+1. 第三方数据库工具在连接 ShardingSphere-Proxy 时会发送一些 SQL 查询元数据，当 ShardingSphere-Proxy 没有创建 `database` 或者没有注册 `storage unit` 时，ShardingSphere-Proxy 无法执行 SQL。
+2. 推荐先创建 `database` 并注册 `storage unit` 之后再使用第三方数据库工具连接。
 3. 有关 `storage unit` 的详情请参考。[相关介绍](/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/storage-unit-definition/)
 
 ## 分片
@@ -170,14 +169,14 @@ ShardingSphere 采用 snowflake 算法作为默认的分布式自增主键策略
 2. ShardingSphere 预置了必要的连接池参数，如 `maxPoolSize`、`idleTimeout` 等。如需增加或覆盖参数配置，请在 `dataSource` 中通过 `PROPERTIES` 指定。
 3. 以上规则请参考 [相关介绍](/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/storage-unit-definition/)。
 
-### [DistSQL] 使用 `DistSQL` 删除资源时，出现 `Resource [xxx] is still used by [SingleTableRule]`。
+### [DistSQL] 使用 `DistSQL` 删除 `storage unit` 时，出现 `Storage unit [xxx] is still used by [SingleTableRule]`。
 
 回答：
 
-1. 被规则引用的资源将无法被删除。
-2. 若资源只被 single table rule 引用，且用户确认可以忽略该限制，则可以添加可选参数 ignore single tables 进行强制删除。
+1. 被规则引用的 `storage unit` 将无法被删除。
+2. 若 `storage unit` 只被 `single table rule` 引用，且用户确认可以忽略该限制，则可以添加可选参数 ignore single tables 进行强制删除。
 
-### [DistSQL] 使用 `DistSQL` 添加资源时，出现 `Failed to get driver instance for jdbcURL=xxx`。
+### [DistSQL] 使用 `DistSQL` 添加数据源时，出现 `Failed to get driver instance for jdbcURL=xxx`。
 
 回答：
 
diff --git a/docs/document/content/faq/_index.en.md b/docs/document/content/faq/_index.en.md
index f6f263eeb25..b36d0b3d900 100644
--- a/docs/document/content/faq/_index.en.md
+++ b/docs/document/content/faq/_index.en.md
@@ -72,16 +72,15 @@ Answer:
 1. ShardingSphere-Proxy could be considered as a MySQL server, so we recommend using MySQL command line tool to connect to and operate it.
 2. If users would like to use a third-party database tool, there may be some errors cause of the certain implementation/options.
 3. The currently tested third-party database tools are as follows:
-   - Navicat: 11.1.13, 15.0.20.
    - DataGrip: 2020.1, 2021.1 (turn on "introspect using jdbc metadata" in idea or datagrip).
-   - WorkBench: 8.0.25.
+   - MySQLWorkBench: 8.0.25.
 
-### [Proxy] When using a client such as Navicat to connect to ShardingSphere-Proxy, if ShardingSphere-Proxy does not create a database or does not add a resource, the client connection will fail?
+### [Proxy] When using a client to connect to ShardingSphere-Proxy, if ShardingSphere-Proxy does not create a database or does not register a storage unit, the client connection will fail?
 
 Answer:
 
-1. Third-party database tools will send some SQL query metadata when connecting to ShardingSphere-Proxy. When ShardingSphere-Proxy does not create a `Database` or does not add a `Storage Unit`, ShardingSphere-Proxy cannot execute SQL.
-2. It is recommended to create `database` and `storage unit` first, and then use third-party database tools to connect.
+1. Third-party database tools will send some SQL query metadata when connecting to ShardingSphere-Proxy. When ShardingSphere-Proxy does not create a `Database` or does not register a `Storage Unit`, ShardingSphere-Proxy cannot execute SQL.
+2. It is recommended to create `database` and register `storage unit` first, and then use third-party database tools to connect.
 3. Please refer to [Related introduction](/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/storage-unit-definition/) the details about `storage unit`.
 
 ## Sharding
@@ -173,12 +172,12 @@ Answer:
 2. ShardingSphere presets necessary connection pool properties, such as `maxPoolSize`, `idleTimeout`, etc. If you need to add or overwrite the properties, please specify it with `PROPERTIES` in the `dataSource`.
 3. Please refer to [Related introduction](/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/storage-unit-definition/) for above rules.
 
-### [DistSQL] How to solve ` Resource [xxx] is still used by [SingleTableRule].` exception when dropping a data source using DistSQL?
+### [DistSQL] How to solve ` Storage unit [xxx] is still used by [SingleTableRule].` exception when dropping a data source using DistSQL?
 
 Answer：
 
-1. Resources referenced by rules cannot be deleted
-2. If the resource is only referenced by single table rule, and the user confirms that the restriction can be ignored, the optional parameter ignore single tables can be added to perform forced deletion
+1. Storage units referenced by rules cannot be deleted
+2. If the storage unit is only referenced by single table rule, and the user confirms that the restriction can be ignored, the optional parameter ignore single tables can be added to perform forced deletion
 ```
 UNREGISTER STORAGE UNIT storageUnitName [, storageUnitName] ... [ignore single tables]
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/_index.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/_index.cn.md
index 8c707a78506..bdfa18a16a4 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/_index.cn.md
@@ -18,4 +18,4 @@ ShardingSphere-JDBC 提供了 4 种配置方式，用于不同的使用场景。
 如果前一个规则是面向数据源聚合的，下一个规则在配置数据源时，则需要使用前一个规则配置的聚合后的逻辑数据源名称；
 同理，如果前一个规则是面向表聚合的，下一个规则在配置表时，则需要使用前一个规则配置的聚合后的逻辑表名称。
 
-更多使用细节请参见[使用示例](https://github.com/apache/shardingsphere/tree/master/examples/shardingsphere-jdbc-example)。
+更多使用细节请参见[使用示例](https://github.com/apache/shardingsphere/tree/master/examples/shardingsphere-example-generator)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/_index.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/_index.en.md
index e8d2bb5b633..b5e963852f2 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/_index.en.md
@@ -19,4 +19,4 @@ It should be noted that the superposition between rules are data source and tabl
 If the previous rule is data source oriented aggregation, the next rule needs to use the aggregated logical data source name configured by the previous rule when configuring the data source;
 Similarly, if the previous rule is table oriented aggregation, the next rule needs to use the aggregated logical table name configured by the previous rule when configuring the table.
 
-Please refer to [Example](https://github.com/apache/shardingsphere/tree/master/examples/shardingsphere-jdbc-example) for more details.
+Please refer to [Example](https://github.com/apache/shardingsphere/tree/master/examples/shardingsphere-example-generator) for more details.
